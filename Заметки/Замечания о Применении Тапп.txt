Замечание о применении Тапп в моих проектах.

Я рассчитываю применять Тапп в моих проектах.
- Это должно позволить реализовать некоторые мои проекты, которые без Тапп слишком сложные.
- Это должно сделать мои наборы данных более гибкими и взаимопроникающими, взаимодополняющими.
- Это должно облегчить мне написание сложных систем.

Сегодня я делал внедрение в движок Тапп сменных адаптеров БД, 
 чтобы движок не требовал все коннекторы всех БД, которые он может поддерживать.
Поэтому осмотрел проект, несколько поверхностно.
Еще я запланировал внедрение Тапп в Оператор и поэтому присматривал решения для этого.
Оказалось, что мало просто присоединить Тапп в Оператор как затейливый слой над БД.
Оказалось - над Тапп еще один слой-адаптер нужен. 
Он должен превратить Сущности Оператор в Сущности Тапп.
И вот это - оказалось очень сложной штукой.

Начальная структура потребовала 30 ячеек и яхз сколько связей.
А это просто начальный заголовок инфраструктуры: точка входа, разделение ячеек на служебные и пользовательские,
  ячейки коллекций, которые группируют ячейки схожего назначения.
Вот вся эта штука в коде выглядит очень сложной - легко что-то упустить или перепутать.
 На диаграмме все это нарисовать - наверно проще будет понимать.
 
Чтобы добавить в Солюшен Тапп некую простую единицу информации, нужно создать 3 ячейки и 10 связей.
 Ну, это первую такую единицу - на последующие уже меньше.
 Но надо понимать, какие связи создавать, с какими ячейками, какая ячейка что обозначает.
 Поле description ячейки тут совсем не лишнее получается 
 (а я в начале проекта считал его полезным только для экспериментальных случаев).
 Вот поскольку все так сложно, то и ошибок будет много, и работа будет идти медленно.

Но главное - это совершенно новый тип деятельности. 
 Это выглядит сейчас сложнее, чем написание кода. 
 Но наверно, на самом деле - проще: тут чистая семантика. Код же более вариативен.
 Возможно, я привык бы быстро к этой новой деятельности, но она не заменяет старую.
 Код мне все еще надо писать много где.
 А вот эту Структуру Сущностей Тапп мне не хочется сейчас осваивать. 

Проблема в том, что мне для выполнения работ в Структуре Сущностей Солюшена Тапп 
 надо быстро понимать, что сейчас хранится в Тапп и где находятся ячейки, 
 представляющие нужные мне отношения, типы данных и Сущности. 
 Без этого я не могу добавить в Структуру Сущностей новые ячейки - там все очень взаимосвязано. 
Можно было бы проще понимать структуру в тапп, если представлять ее деревьями.
 Которые некий алгоритм просто текстом формирует и выводит длинной текстовой портянкой в текстовый файл отчета.
 Подобно тому, как это сделано в Инвентарь генераторе скриптов.
 Я бы, просмотрев этот файл, мог бы отыскать в нем названия нужных мне ячеек. Дело пошло бы быстрее, наверно.

Я уже создал один такой вспомогательный слой - статический класс, с операциями вроде:
- создать начальную структуру сущностей
- создать ячейку пользователя
- создать ячейку типа ячейки
- создать ячейку типа связи
 и тому подобное, дальше не помню.
Эти функции не просто создают ячейку, но еще и связывают ее в соотвествующую коллекцию, 
 и выполняют прочие подобные работы. обеспечивая целостность служебной части структуры сущностей. 
Но вот это - только самое начало этой новой для меня области деятельности.

Создание же структуры сущностей для Оператора - это целая тема для таких разработок.
Думаю, реляционная Бд Оператора мне обойдется проще, чем реализовать такое же хранение данных в Тапп. 

В итоге, это жутко непривычная и сложная штука, и ее надо использовать пока только в случаях, где нужно хранить графовые модели.
Ну или мне нечем более заняться и я выдумаю как хранить некие сложно-структурированные данные в Тапп.
- как их добавлять, удалять, извлекать в виде объекта, находить по разным критериям, изменять отдельные свойства объекта, итп.
Как я заметил ранее, это больше похоже на паутину, чем на лабиринт.



 

 