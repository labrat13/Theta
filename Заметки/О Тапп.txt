Как развернуть Тапп на RaspberryPi ?
Параметры платы: 1Гб ОЗУ, 16 Гб SD-card, ARM-процессор, Ethernet 100Мбит, питание 5в 2а, ...

16 таких плат для 1 графа Тапп? Связать их по TCP.
Поместить в чемоданчик вместе с блоком питания

- надо изначально проектировать тапп для такой системы.
- написание кода движка Тапп - серверная версия, на Си, под Линукс, на ARM, на платформе RaspberryPi, при полном осутствии опыта - 5 причин не делать этого.
  Так как ни в чем из этого я пока не преуспел.
  И у меня компилятора под это нет.
  Это лет 10 надо целенаправленно изучать матчасть и пробовать эксперименты.
- 1 плата = 1 контейнер Тапп. Ячейки связаны через связи, которые включают в себя Id контейнера. Так можно масштабировать граф. Но листья лучше держать в том же контейнере, что и их родительские узлы графа. Хотя можно и вдругой переносить.
- То есть, этот граф должен, вроде бы, хорошо разноситься на мою многоконтейнерную архитектуру и модульную аппаратную платформу?
-- архитектура ARM, OS Linux - нужно разрабатывать движок заново.
-- быстродействие всей системы определяется сетью.
-- Надо сначала реализовать это на PC-сети компьютеров, чтобы решить все проблемы, отработать протокол, итд.
   А потом - быстрее и дешевле будет найти ресурсы и нанять профессионалов для написания движка.
------------------------------------------------------------
SIM, Tapp, ...

Сколько ресурсов потребуется?
- 1 ячейка Тапп = 1 ячейке некоторой таблицы данных = 1кб памяти.
Следовательно, для хранения большой таблицы БД (10 ячеек в строке и миллион строк) = 10 миллионов ячеек = 100 миллионов килобайт = 100Гб.
-- лучше тогда такие таблицы хранить в БД, а в ячейки их переводить только по мере необходимости.
- для каких задач потребуется? Для оценки размера требуемых ресурсов нужен список задач, которые эта штука должна решать.
 
А где я все это буду использовать?
Для чего?
Где все это будет стоять?
От чего все эти сервера будут питаться?
Что они будут такого делать, что окупит все эти затраты, работы и идеи?

Вот тут у меня мышление не работает никак.
И планирование не заводится.
И нет цели такой, чтобы ради нее вот это вот все окупилось...

----------------------------------------
    
Для Тапп

Надо найти, где у меня есть класс словаря-кеша с ограниченной длиной списка объектов.
И добавить эту функциональность в коллекции ячеек и связей движка Тапп.
Чтобы выгружать ячейки, к которым давно не было обращения и они не занимали память в контейнере.
- возможно, придется перепроекировать эту часть концепции Тапп.
- я его вроде бы скопировал в мою библиотеку классов.

Так-то эти ячейки можно прямо на сервере БД реализовать как пользовательские типы данных. 
Но вот операции с ними производить - я для этого придумал контейнер, в нем эти все структуры ячеек и должны исполнять свои методы.
Такая была идея. А без этого весь движок - просто кеширующий адаптер для БД. Приложение тогда само исполняет всю логику структуры сущностей.
А с контейнером - структура сущностей сама исполняет свои методы, а приложение лишь запускает их.

------------------------------------------
Внешние связи ячеек контейнера - мысли 


Они часто хранятся в полях Id вроде КлассЯчейки.
Их надо отслеживать для Солюшена, чтобы, например, не удалить ячейку, которая используется в многих других солюшенах. Хотя у нее нет связей, но ее идентификатор может где-то использоваться. 
Сейчас я не могу подсчитать сколько и где используется ячейка, без перебора всех прочих Солюшенов.
- можно предложить функцию, которая просматривает весь контейнер и всю БД, и соберет список внешних связей ячеек Солюшена. Чтобы потом внешний код мог это использовать, не перебирая Солюшен сам.
-- и как определить, что этот список актуален?
--- при загрузке солюшена можно ее вызывать, чтобы она обновляла этот список.
--- и записывать этот список при закрытии солюшена, чтобы не загружать каждый солюшен, а просто прочитать этот список.
--- можно установить флаг актуальности, который сбрасывается при любом изменении внешних Id в ячейке.
    Функция после создания списка внешних Id устанавливает флаг актуальности.
    Если изменения не происходило с тех пор, флаг остается установленным.
- внешние связи сделаны такими односторонними, чтобы можно было использовать классы ячеек в других Контейнерах, не обращаясь к ним.
-- но это неправильно - как использовать класс ячейки, не обращаясь к этому Солюшену, содержащему ячейку класса ячейки? Вручную назначать в коде - от этого надо уходить.
-- а без этого - ячейка класса ячейки будет содержать миллионы связей со своими объектами, и это будет очень медленно работать. А главное - точно известно, где и как ячейка используется.
--- Вот это вот количество связей - и есть проблема в модели Тапп. Так-то можно хоть сейчас ее реализовать со связями и без всех этих режимов ячеек, просто одну на все случаи жизни.
Например, на sqlite ?  

Выводы: 
1. код движка надо написать новый, у ячеек не должно быть всяких полей вместо связей, все это должно быть реализовано связями разных типов, сами ячейки должны стать проще, без всех этих MCellA, MCellBds, ...
2. списки связей ячеек должны быть сразу спроектированы так, чтобы содержать миллион связей и быстро с ними работать. Воможно, все сразу из БД выбираться, не выгружая ячейку и все ее связи в память. Типа MCellA - ячеек, все реализовать под конкретные запросы кода.
3. На текущей архитектуре движка все эти ячейки, представленные полями объекта ячейки, должны быть определены внутри Солюшена. Чтобы связи эти были только локальными.