1) Нужен опыт, чтобы оценить количество ячеек, связей, объем БД, относительно числа собственно полезных Сущностей.
 - Например, Инвентарь?
 - надо сделать выводы по каждому такому проекту. Это даст более точные оценки объема Структуры Сущностей для задач.

2) Хорошо бы иметь резиновый Тапп на миллиард ячеек, чтобы в него поместились все мои эксперименты.

3) Для экспериментов нужен Регистратор Солюшенов, который будет выдавать каждому Солюшену уникальный идентификатор.

4) Надо попробовать перевести Инвентарь в Тапп. 
   - Но для этого нужны классы предметов. В Инвентарь их нет, в Тапп они нужны как часть концепции Тапп.
   Надо попробовать импортировать классы из Хранилищ в Тапп.

   После этих упражнений я теоретически мог бы спроектировать Тапп для работы в качестве БД Оператора.
   - только в начальной стадии Оператора. Потом потребуются всякие штуки вроде сканирования папок 
     и определения их классов, определение классов для программ и утилит, итп.
     Это не только усложнит Структуру Сущностей, нои потребует ручного указания классов для папок и файлов и программ,
     и разработки иерархии классов для них. Но это в будущем.

А сейчас - хорошо иметь компьютер с 16 гб памяти, чтобы все в ней помещалось: и сервер БД, и Структура Сущностей.
Но один только компьютер не самодостаточен - нужно разработать теорию и провести много работ, чтобы Оператор мог бы выполнять какие-то полезные функции.
Один только язык содержит более миллиона часто употребляемых словоформ, и для них надо знать классы, смысл, и связи с процессами и сущностями.  

5) Спроектировать Тапп для Инвентарь - это сложно выглядит.
Тут надо получить такие решения, которые потом можно применить в других применениях Тапп.

Например, можно сразу завести в Тапп базовые типы данных Шарпа: строки, целые, плавающие числа, null.
И для них нужны операции. Желательно, наследуемые.

Можно также завести в Тапп классы коллекций. Класс коллекции как одна или совокупность ячеек.
И для него потребуется конструктор; возможно, деструктор; и операции, возможно наследуемые.
Коллекции все типизированные, они должны содержать сущности определенного класса.
Методы коллекции должны проверять, является ли добавляемая в коллекцию Сущность указанным типом или его потомком.
Только вот как хранить в Коллекции этот требуемый класс сущности? В данных ячейки коллекции?

И тут нужны новые термины специальные.
Например, класс, как Сущность, представлен некоторой ячейкой класса, которая связана с ячейками членов класса. 
Как называть такую главную ячейку класса в моих текстах?

И вот, вот я определю состав класса Предмет, напишу конструктор класса Предмет, и что потом?
Я использую статические классы для хранения кода для Сущностей Солюшена, тогда как данные хранятся в ячейках, а отношения в связях.
Код я могу запускать, только подсистема методов еще не реализована, и как представлять методы для Сущностей, я еще не знаю.
Очевидно, я могу собрать алгоритм метода из ячеек разных классов операторов, и потом компилировать эту модель в скрипт для быстрого исполнения.
Это что-то похожее на интерпретатор-компилятор виртуальной машины NET или Java.
И исполнять код быстро, и просматривать и изменять его удобно, и автоматически анализировать легко.  
 
И снова об устройстве Солюшена для Инвентарь:
- Предмет должен содержать сведения о классе предмета. Например, КТ315Б имеет класс Транзистор.
  Значит, в СтруктуруСущностей надо внести и класс "КлассПредмета_Транзистор".
 А где брать этот класс или где его хранить? Как его автоматически определить для сущности по ее названию?

