++ Список Требований К Процессу Разработки

* Надо регулярно заносить задачи по проекту в мой текущий органайзер. Хоть он и кривой, но его надо применять. Чтобы от этого была польза.
* Надо вписать требование не изменять функциональные требования в процессе разработки кода.
* Надо отслеживать что концепция соответствует целям проекта.
* Надо формально проверять соответствие целевых требований и цели
* Надо формально проверять соответствие целевых требований и функциональности
* Надо вести разработку более формализованно.
* Надо создавать документы, описывающие процессы и результаты.
* Надо регулярно ставить себе задачу рефакторинга документа и сокращения контекста задачи. 
* Надо планировать и проводить рефакторинг по каждому документу в конце работы над ним.
* Надо делать детальный план работы.
* Надо разрабатывать концепцию, а не использовать существующий код.
* Надо делать переработку материалов, документов и решений для сокращения их контекста.
* Надо особо выделять варианты решения. Сводить в отдельный список, проводить обсуждение выбора, проводить эксперименты для выбора вне процесса разработки.
* Надо контролировать неопределенности - отмечать их места обитания и причины возникновения в отдельный список.
* Диаграммы, к которым часто обращаюсь, надо распечатать. Если их размер позволяет это.
* Нужно проводить мини-эксперименты, чтобы понимать, как это на самом деле устроено.
* Нужно следить, чтобы эксперименты  не подменяли работу над проектом и не уводили от цели.
* Нужен общий и детальный план проекта.
* Надо регулярно планировать и выделять время для работы над собственно этим планом. Чтобы приводить его в порядок, обновлять, дополнять, конкретизировать.
* Надо разрабатывать проект путем работы с целями, со списком требований, соответствием функциональности.    Все документы сводить в разделы. Например, в вики или в дереве студии.
   Что-то вроде: Вот сущность. Ее цель - нечто. К ней предъявляются требования: список требований.
   Потом документ - список Требование -> Функциональность.
   Потом предложения по устройству сущности.
* Каждую сущность проекта или процесса разработки проекта нужно внести в глоссарий и создать ее описание. 
* Нужно разбивать задачи на мелкие так, чтобы задачу можно было сделать за один подход. Если задача за один подход не заканчивается, ее надо перепланировать заново.
* Надо сначала формулировать задачу, потом поставить ее в план, потом собирать для нее ресурсы. Потом выполнить. 
   При этом отмечать состояние задачи там же в плане и в формулировке задачи, и на выделенной странице задачи.
* Надо выполнять не более одной задачи за подход. Даже если они простые.
* Надо для каждой заметки или другого текста сделать анализ заметки и написать комментарии и выводы из нее.
* Надо периодически осматривать свою работу на предмет ее соответствия цели.
   Это надо запланировать по времени, прямо в органайзере, напоминаниями.
   Надо и в плане предусмотреть такие вставки - задачи.
* Надо проводить рефакторинг после завершения работ по каждой единице плана - подсистеме, задаче, итд.
   Это значит - осмотреть весь результат работы и внести изменения в связанные документы итд.
   Это выглядит неприятной лишней работой, но это надо делать, чтобы поддерживать весь проект в нормальном состоянии адекватности.
* Надо приносить разработку и контроль состояния проекта в планировщик, с привязкой к датам. Иначе я так и буду плыть во времени.
* Надо начинать все заново. Старые работы использовать как материал для переработки.
* Надо делать отчеты и диаграммы. Они позволяют быстро восстановить контекст задачи.
* Надо документировать весь процесс разработки и все сущности, обнаруженные в этом процессе. Это пригодится в последующих проектах.
* Надо описать виды документов, их применение, состав, образцы.
* Надо описать разные временные и переходные сущности и особые моменты. Исходя из того, что работа не должна зависеть от того, помню я о проекте или нет.
* Надо вносить в список реквизита все что потребуется в процессе работы.
* Надо максимально задокументировать разработку процесса подготовки к разработке.
   Чтобы в следующий подход хотя бы эту часть быстро воспроизвести.
   И продвигаться дальше.   
* Надо запланировать и выполнить исследования по изучению возможностей софта итд.
* Надо сохранять сырые тексты документов для возможного последующего анализа.
* Надо вести версии документов. Хорошо было бы использовать систему контроля версий. Хотя я не умею с ней работать. Можно вместо этого просто хранить резервные копии в отдельной папке бекапов.