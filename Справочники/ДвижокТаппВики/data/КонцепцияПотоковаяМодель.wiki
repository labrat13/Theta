++ Концепция Потоковая Модель
[//ДОПОЛНИТЬ] - добавить материалы.
++++Описание концепции
Описывает следующую перспективную версию разрабатываемой системы.


+++Материалы

++++Потоковая модель
Распознавание потока – подход.
Изначально данные о сущности входят в систему в виде многомерного потока данных. Когда система умеет выделять характеристики, она умеет выделять из потока параметры по каналам. Например, вес, цвет, твердость, запах, шероховатость итд. Сущности классифицируются по этим параметрам по усредненной шкале.

rel://files/доки3.png

Одновременно с этим, хранится полный поток сущности.

По мере освоения система набирает много сущностей и проводит сравнение и анализ, добывая недостающие данные из потоков восприятия сущностей. Это обычное сравнениес поиском аналогий. Так появляются классы сущностей, когда аналогии группируются в абстракцию.
В дальнейшем процессы стандартизируются и формализуются, совершенствуются.

Для каждого класса объектов существует свое характерное свойство или набор свойств, которое помогает идентифицировать объект.
Например, яблоко – оно может быть разного цвета, веса размера, но оно идентифицируется по характерной форме и характеру поверхности и запаху. Конечно, в памяти хранятся данные о десятках яблок. И вероятно, один и тот же механизм сжимает эти представления, создает логические модели, находит аналогии, формирует общие усредненные характеристики объектов этого класса. Эти характеристики используются для идентификации объекта в потоке. Что-то вроде: Если А=0.1..0.11; В=0.5..0.8;С=0.95..1.0, то это вероятно, яблоко.

Тогда для изучения этого механизма нужно смоделировать поток. Пока это сложно. Проще отправлять на анализ уже готовые данные об объектах, но надо учитывать, что некоторые детали такого потока данных отсутствуют – поток не полный, поэтому созданные модели анализа будут отличаться от ожидаемых.

То есть, входной поток упрощенно будет как метроном.
Система должна уметь записывать входной поток.
Система должна уметь анализировать входной или сохраненный поток.
Система должна уменьшать затраты на работу с событиями.
Система должна выделять событие из потока.

В этом примере каждое событие запускает работу над ним. Поскольку события регулярны, они рано или поздно приводят к формированию механизмов, если их возможно сформировать.
И если общее состояние системы немного изменяется циклически.

Работа:
Событие – записываем входной поток.
Событие – записываем входной поток.
Событие – записываем входной поток.
…
Устали записывать – записываем более абстрактно, теряя детали.

Каким-то образом вместо записывания просто находим подходящий поток
- устаем, теряем детали. Ошибаемся при поиске.
Сравнение выдает несоответствие.
- а почему проводится это сравнение?
-Как в результате формируется механизм реакции?
-Что вообще представляет из себя эта реакция?



++++Применение Тапп для Потоковая модель 
Если Тарр23 у нас появится, мы получим опыт для создания потоковой системы. Потоковая система состоит из потоков восприятия, потоков мышления. Эти потоки хранятся где-то в памяти, в определенном виде и затем они соответственно используются. Они преобразуются и используются таким образом, чтобы формировать постепенно базу знаний.
И формировать методы по ее обработке. То есть, формировать такой интеллект. Участки потоков между собой ассоциативно связаны, и это предполагает, что есть механизм, который записывает и ранит эти потоки в памяти, и механизм, который производит анализ входных потоков информации, и на основании этого анализа создает новый поток, который тоже сохраняется в памяти и тоже связывается с остальными потоками.
Весь этот комплект потоков и образует память и всякие там преференции и прочие интеллектуальные фишки. 
Получается: Потоки, подсистема хранения потоков, анализатор потоков. 
Хранение потоков - это запись последовательных событий или сущностей. Подобно тексту, только записываются параллельно.
Например, записываем одновременно появление собаки или кубика - у нас есть статическое поле - область действия, мы записываем, что обнаружили в нем кубик. потом записываем, что у нас все еще есть этот кубик, потом записываем, что у нас нет этого кубика - он куда-то делся. То есть, весь этот процес мы записываем в поток. И параллельно записываем другие объекты, предметы и действия. На такую временную шкалу записываем все эти события. Это же события.
Этот механизм регирует в основном на события. Мы обнаружили предмет. Мы опознали что это кубик. Мы отметили, что оно неподвижен. Мы шарим взглядом дальше, но помним, что у нас есть этот кубик.
Потом мы опять натыкаемся на этот кубик и подтверждаем что оно лежит (кстати, опознать состояние предмет лежит - это вроде как усвоенный рефлекс), что он неподвижен, что он продолжает находиться там, где мы его видели в прошлый раз.
Вот так постепенно мы записываем поток событиями как извещениями об изменении. 
Это сведения о состоянии этого кубика - что он лежит, неподвижно в некотором месте.
Потом записываем, что мы что-то там сделали, в результате у нас нет этого кубика, он исчез.
Сначала записываем наблюдения, потом произведенные операции отдельным слоем идут. Так параллельными слоями записываем весь поток в хранилище.
С этим потоком работает анализатор. Анализатор представляет собой систему рефлексов, которые срабатывают при определенных условиях. Такие рефлексы-реакции на события. Там много этих рефлексов и сложная их организация получается. Они ка-то структурируются, направляются, перерназначаются.
Как-то управляются. Постепенно накапливается система этих рефлексов. И вот образуется такой анализатор, который эту систему связанных между собой потоков просматривает и образует новый поток. Производя информационную организацию внутри себя, формирует новый поток и назначает его как наиболее свежий, актуальный потк, который и должен считаться теперь как наиболее правильный.
Причем это (что поток должен считаться как самый актуальный и правильный) записывается там же где-то отдельно в этом же потоке. Описывается, почему поток должен считаться актуальным. И анлизатор когда к этой системе все обращаются (к этой системе связей, ведь все потоки связаны друг с другом) и вот когда анализатор вю эту связку получает, он постепенно анализирует все эти связи, ухватывает тот поток, который самый новый и свежий (потому что он самый новый и свежий) и уже дальше работает с ним, (потому что он самый новый и свежий).

Вся эта система из анализатора с его наборами рефлексов-операций и потоков данных, собственоо, и образует сейчас интеллект. Хотя достаточно простой. Так у нас формируются и все остальные вещи. Все структуры и все остальное представляет собой просто запись потока. Поэтому для создания такой структуры нельзя просто так в башке посоображать и составить - это не запоминается. Запоминается только когда все эти вещи оформлены уже в новый поток, где все уже прописано - где что, с чем связано и почему - прямо таким непрерывным отдельным новым потоком вся эта классификация произведена. А в противном случае вся эта классификация фактически собирается из предыдущих потоков, на основании всего предыдущего опыта, и она производится в таком случае медленно и требует специальной работы, чтобы провести этот новый поток. В котором собственно отражена эта классификация.
Сейчас это примерно такой интеллект и он достаточно простой, чтобы его реализовать на компьютере.

Чтобы реализовать эти потоки на компьютере, надо создать определенный движок, систему, концепцию написать. Потом создать методику записи последовательности событий. Чтобы хотя бы входной поток - наблюдений - можно было вводить как поток, хранить как поток, анализировать. И ужимать итд итп. Чтобы его анализировать, нужны методы. А методы должны создаваться динамчески, и их тоже надо где-то хранить. Как-то создавать и где-то хранить. 
Тут надо Тарр или более специализированный движок.
Получается, мышление это достаточно медленный процесс, по сравнений с Тарр. Тарр достаточно статичен, предназначен в основном для исследований, накопления опыта, создания семантической сети. Он не подходит для реализации потоковой модели. Тарр можно использовать для анализа данных и создания этой потоковой модели как более лучшей концепции. 
Интеллект можно представить в этой потоковой модели, но для этого надо оцифровать входной поток, и надо как-то делать этот анализатор. Анализатор должен быть довольно сложным, и вероятно с первого раза его сделать не получится. Надо исследовать варианты, там будет много работы.        
Это получается более естественная модель интеллекта.
