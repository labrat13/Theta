++ Концепция Разработки Солюшена
[//СБОР МАТЕРИАЛОВ]
См РаботаПользователяССолюшеном.
todo.концепция.солюшен: собрать материал по солюшену без БД в СолюшенБезБД.

++++Описание концепции
Это концепция устройства [Солюшен]а при проектировании кода [Движок]а.

* ИдентификаторСолюшена - готово 22.07.2016 19:43
* [Солюшен] - готово 22.07.2016 19:32
* ФайлСолюшена - готово 22.07.2016 20:26
* СолюшенБезБД
* СтатистикаСолюшена - готово 23.07.2016 01:10
* НастройкиСолюшена
* МенеджерСолюшена - описать.
* Придумать как состояние солюшена представлять для ИнтерфейсРегистратораСолюшенов и пользователя.
    * Это пока Енум как список состояний.
    * Искать значения, вероятно, они подобны состояниям СУБД. 

+++Блокировка повторного использования Движка - внести в концепцию и классы.
* Может получиться, что второй экземпляр Движка пытается открыть Солюшен, уже используемый первым экземпляром.
* Одновременная работа нескольких Движков в одном Солюшене не предусмотрена текущей концепцией Тапп.
* В СервернаяВерсияДвижка доступ к Солюшену управляется через РегистраторСолюшенов. Там можно эту ситуацию выявить и обработать.
* В ВстраиваемаяВерсияДвижка надо где-то отметить, что Солюшен открыт. Движок перед подключением должен проверить, используется ли уже этот Солюшен, и если используется, то выдать соответствующее сообщение пользователю.
    * Может оказаться, что этот признак используемости Солюшена не был сброшен при завершении работы Движка. Например, в случае сбоя. См ТемаНеожиданноеПрекращениеРаботыДвижка.
        * Тогда надо иметь способ для пользователя его сбросить, убедившись, что Солюшен действительно не используется. Пользователь мог бы через приложение отправить команду для Движка сбросить признак используемости Солюшена, и заодно, проверить и починить файлы Солюшена. Например, запустив Оптимизатор.      
    * Отметить можно созданием некоторого файла с фиксированным именем на время работы с Солюшеном. В СУБД Аксцесс, например, для этого используется файл блокировок, создающийся на время работы с БД.
        * Этот способ требует доступа на создание файлов в каталоге солюшена. Эти права наверняка есть у процесса.
        * При перезагрузке компьютера файл блокировки не исчезнет, блокировка сохранится.
        * Файл блокировки можно удалить вручную. 
    * Отметить можно объектом ядра типа Семафор с фиксированным именем.
        * Этот способ требует некоторых прав пользователя. Их доступность надо выяснить. 
        * При перезагрузке компьютера признак блокировки исчезнет. Но перезагрузка редко бывает причиной. Обычно процесс приложения просто останавливается и выгружается из памяти.
        * Семафор мог бы удаляться при завершении установившего его приложения-владельца. Или нет? Надо разобраться.
* (*Выбрано*) Отметить можно еще в момент открытия ФайлСолюшена - надо просто открывать его в режиме монопольного доступа. Тогда вторая попытка открытия файла невозможна - возникнет исключение, и работа Движка завершится.
        * Это самое простое решение, но оно требует, чтобы ФайлСолюшена был открыт всегда во время работы [Движок]а.
        * При любом завершении процесса Движка файл разблокируется операционной системой, так что все в порядке.
        * todo.концепция.лог: перенести это в требования к ФайлСолюшена и Запуск Солюшена  






