++ Сборка Операции С Ресурсами1
[//ПЕРЕДЕЛАТЬ] - Тут операции не проработаны еще, часть их не потребуется, и некоторых нет. А то что есть - не соответствует концепции проекта. Пока надо просто свести их воедино и использовать для примера.

Подсистема ресурсов должна обеспечивать пользовательский код всеми необходимыми операциями с файлом, идентифицируемым по ИдентификаторФайлаРесурса.

Операции с собственно файлом ресурса возложим на пользовательский код, поскоьку они зависят от сущности, которую файл хранит. Подсистема ресурсов должна предоставлять для этого некоторые операции, но пока неясно, какие именно.
 
Если будут операции записи в файл ресурса, или удаление файла ресурса, надо предусматривать блокировку доступа записи/чтения к файлу и отказы операций из-за такой блокировки.
todo.глоссарий: Надо проработать операции с ресурсами для всех видов ресурсов: ЛокальныйРесурс, ВнешнийРесурс, СтороннийРесурс, ФайлРесурсаДанных, ФайлРесурсаСнимка, ФайлРесурсаОбъекта. А сейчас они отрывочные и неправильные.

+++Операции с ресурсами
* Вычислить общий размер и количество файлов ресурсов
* Удалить пустые папки всех уровней при оптимизации. См [Оптимизатор].
* Создать имя и путь файла по ИдентификаторФайлаРесурса
* Получить максимальный ИдентификаторФайлаРесурса существующих файлов
* Дефрагментировать пространство ИдентификаторФайлаРесурса файлов при оптимизации. См. [Оптимизатор].
* Добавить файл ресурса (копировать или переместить ?)
* Удалить файл ресурса по ИдентификаторФайлаРесурса
* Проверить наличие файла ресурса по ИдентификаторФайлаРесурса
* Получить свойства файла ресурса по ИдентификаторФайлаРесурса

++++Проверка что ячейка является ячейкой ресурса
Этот способ действителен только для ЛокальныйРесурс.
* Аргумент - ячейка
* Проверить, что тип ячейки является - или является производным от - типа "Ячейка ресурса". [//ДОПОЛНИТЬ] - как это проверить?
* Если это не так, ячейка не является ячейкой ресурса.
* Проверить, что данные ячейки имеют длину 4 байта. Если это не так, то ячейка содержит не идентификатор ресурса. (Спорно - данные ячейки могут содержать строку сетевого пути к файлу, расположенному вне ХранилищеРесурсовСолюшена)
* Проверить, что файл с именем, соответствующим идентификатору ресурса, хранящемуся в ячейке, существует. 
* Если это не так, ячейка является неправильной и нужно запросить пользователя для устранения нарушения.

++++ Создание файла в ХранилищеРесурсовСолюшена
Включает в себя создание нового пустого файла, добавление в хранилище, получение пути к файлу.
Можно предложить создавать и заполнять файл где-то во временном каталоге, а затем добавлять в ХранилищеРесурсовСолюшена, когда уже создание файла успешно завершится - так проще откатывать изменения.
Это предполагает, что в структуре каталогов проекта будет существовать временный каталог. Такой каталог требует некоторого набора функций и концепцию. Его надо чистить периодически. Его может использовать [Оптимизатор]. 
Или можно использовать системный временный каталог, это проще, но зависит от операционной системы.
todo.концепция.ресурсы: Надо узнать побольше про временный каталог Виндовс - обходят ли его стороной индексация, создание эскизов и прочие пакости ОС.
Можно эту часть концепции - про временный каталог - вынести в некий отдельный модуль, чтобы потом быстро заменить при необходимости.

++++Создание ресурса из существующего файла - собрать воедино тексты
* Аргумент - путь к исходному файлу для ресурса.
* Аргумент - идентификатор ячейки, описывающей тип ресурса
* создаем ячейку ресурса, присваивем ей нужный тип ресурса
* создаем имя файла ресурса по свободному идентификатору ресурса
* проверяем, что файл с таким именем не существует
* создаем каталоги, копируем и переименовываем файл ресурса
* записываем идентификатор ресурса в ячейку ресурса, имя файла записываем в имя ячейки и/или в описание ячейки.
    Удобно имя файла и старый путь файла писать в описание ячейки, чтобы было понятно, откуда этот ресурс взялся, а потом пользователь отредактирует описание. Старое имя файла добно писать в имя ячейки, чтобы пользователь предварительно различал созданные ячейки и переименовывал их при необходимости.
* возвращаем созданную ячейку ресурса вызывающем коду. Вызывающий код должен прицепить ячейку к определенному месту структуры. Оболочка пользователя прицепляет ячейку к стандартной точке сбора, установленной в настройках оболочки (НастройкиСолюшена ?) , чтобы пользователь мог найти новую ячейку в структуре. 
+++++Добавление файлов ресурсов - переделать с учетом исключений. 
•	Получить путь исходного файла 
•	Исходя из хранящегося в МенеджерРесурсов значения наибольшего существующего ИдентификаторФайлаРесурса, создать новый ИдентификаторФайлаРесурса. 
•	По ИдентификаторФайлаРесурса создать новое имя файла, имена каталогов, полный путь файла. Расширение файла скопировать от исходного файла. 
•	Проверить, что конечный файл не существует, без учета расширения. Это потребует специальной функции. 
•	Создать каталоги для конечного файла. 
•	Скопировать или переместить исходный файл. todo.концепция.ресурсы: Чем это определяется: скопировать или переместить?
•	Создать ячейку ЯчейкаФайлаРесурса, представляющую данный ФайлРесурса. 
•	В данные ячейки записать  ИдентификаторФайлаРесурса. 
•	ЯчейкаФайлаРесурса получает имя исходного файла. Пользователь может переименовать ячейку для более точного соответствия смыслу файла.
+++++Создание ресурса:
Аргументы: путь к исходному файлу.
-помещаем файл в хранилище
- получаем новый уникальный ИдентификаторФайлаРесурса
- создаем ячейку
- вписываем имя, описание
- значение = ИдентификаторФайлаРесурса
- тип значения = ResourceFileId  идентификатор ресурса  (CellId)
- тип ячейки = файл ресурса (CellId)


++++Удаление ресурса
Отложенное удаление ячеек, принятое в структуре, предполагает и отложенное удаление файлов - иначе нельзя будет восстановить ячейку ресурса. То есть, ФайлРесурса удаляется при фактическом удалении ячейки [Оптимизатор]ом.
* Помечаем ячейку ресурса неактивной
* В сеансе оптимизации [Оптимизатор] обнаруживает неактивную ячейку ресурса, извлекает из ячейки ИдентификаторФайлаРесурса, удаляет ячейку и удаляет обозначенный идентификатором ФайлРесурса.


++++Физическое удаление ресурса оптимизатором - собрать воедино тексты
Для [Оптимизатор]а и механизма ТранзакцияСолюшена
* Аргумент - удаляемая ячейка ресурса
* проверяем, что ячейка - ячейка ресурса
* извлекаем ИдентификаторФайлаРесурса
* получаем путь к ФайлРесурса
* удаляем ФайлРесурса
* удаляем ячейку ресурса
Поскольку с удалением ячейки мноо мороки, неспецифичной для ресурса, то можно в данной операции  реализовать только удаление файла ресурса, а удаление ячейки переложить на более подходящий для этого код. 
+++++Удаление ресурсов оптимизатором 
См. [Оптимизатор].
•	Получить ячейку файла ресурса 
•	Проверить, что ячейка содержит 4 байта данных и является ячейкой файла ресурса. 
•	Извлечь ИдентификаторФайлаРесурса из данных ячейки. 
•	Проверить, что ИдентификаторФайлаРесурса действителен. 
•	Удалить ФайлРесурса. 
•	удалить ячейку файла ресурса.

Надо ли здесь реализовывать мягкое удаление? Мягкое удаление ячеек предполагает мягкое удаление файлов ФайлРесурса.
То есть, файлы нельзя реально удалять, иначе нельзя будет восстановить. Тогда мягкое удаление изменяет только ячейку,а файл остается нетронутым. Файл удаляет [Оптимизатор] при удалении ячейки.
С файлами тоже есть проблема. Операционная система блокирует файл или каталог для служб индексирования, бекапа, создания миниатюр изображений. Заблокированный файл или каталог выдаст исключение при попытке доступа.
В этих случаях файлы невозможно удалить, изменить или добавить. Поскольку реальная работа с удалением файлов выполняется [Оптимизатор]ом, он должен проверять все ячейки файлов ресурсов на наличие файлов, и наоборот, файлы на наличие ячеек. 
Тут много проблем из-за служб операционной системы.

++++Получить путь к файлу ресурса
* Аргумент - ИдентификаторФайлаРесурса или ячейка ресурса
* получаем ИдентификаторФайлаРесурса из ячейки
* получаем путь к ФайлРесурса
* возвращаем путь к ФайлРесурса

++++Получение файла ресурсов
По ячейке получить путь ФайлРесурса. Проверить существование и параметры: Размер, даты, другие свойства.

++++Получить статистику ресурсов
* Получить число файлов ФайлРесурса
* Получить общий размер файлов ФайлРесурса, можно одновременно с подсчетом числа файлов.

++++создать имя и путь к файлу ресурса
* Аргумент - ИдентификаторФайлаРесурса
* По ИдентификаторФайлаРесурса создать имя файла, имена каталогов, полный путь файла. Расширение файла скопировать от исходного файла.
* вернуть путь к ФайлРесурса.

++++Чтение и запись файлов ресурса - упрощенно
Чтение и запись файлов ресурса выполняются так же, как и для обычных файлов. 
•	Создать/открыть ФайлРесурса для записи 
•	Записывать в ФайлРесурса 
•	Открыть ФайлРесурса для чтения 
•	Читать из ФайлРесурса

++++ Сохранение версий
Версия файла ресурса образуется, когда исходный файл ресурса открывается, его содержимое копируется в некую память, изменяется, и потом его надо сохранить под немного другим именем. Но надо сохранить семантическую связь между этими файлами как версиями.
Эта семантическая связь создается в СтруктураСущностей, а собственно файлы хранятся как отдельные ресурсы.
Поэтому, наверно, сначала содержимое ресурса должно копироваться во временный файл в ОС, потом изменяться, а потом из временного файла копироваться в новый файл ресурса, предназначенный для хранения новой версии ресурса.
Вот этот вот процесс должен поддерживаться в ПользовательскаяКонцепцияСолюшена и, вероятно,  в КодДвижка. 


