++ Связь
[template: ШаблонКарточкиГлоссария]
Состояние: [//ПЕРЕДЕЛАТЬ] - надо лучше структурировать материал, доработать список и описание операций со связями.
Тут есть общеконцептуальные вопросы, пока я на них не могу ответить - сначала надо навести порядок в остальных записях.

[Связь] в КонцепцияТапп представляет [Отношение], связывающее две [Сущность].
Одна из сущностей считается верхней, другая - нижней. Можно считать левой и правой, входящей и исходящей - зависит от типа отношения. 

Все ячейки могут связываться друг с другом. Проверка правильности СтруктураСущностей осуществляется [Оптимизатор]ом и [Навигатор]ом. 

+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* [//Связь/ПолеИдентификаторСвязи]
* [//Связь/ПолеОписаниеСвязи]
* [//Связь/ПолеСостояниеСвязи]
* [//Связь/ПолеТипСвязи]
* [//Связь/ПолеФлагАктивностиСвязи]
* [//Связь/ПолеФлагТолькоЧтениеСвязи]
* [//Связь/ПолеИдентификаторВерхнейЯчейки]
* [//Связь/ПолеСсылкаВерхнейЯчейки]
* [//Связь/ПолеИдентификаторНижнейЯчейки]
* [//Связь/ПолеСсылкаНижнейЯчейки]
* [//Связь/ПолеДатаСозданияСвязи]
* [//Связь/ПолеДатаИзмененияСвязи]
* [//Связь/ПолеСервисноеЗначениеСвязи]
* [//Связь/ПолеИдентификаторВладельцаСвязи]
* [//Связь/ПолеИдентификаторПравДоступаСвязи]
* [//Связь/Конструктор]
* [//Связь/ИнтерфейсСериализации]
* [//Связь/СоздатьСвязь]
* [//Связь/УдалитьСвязь]
* [//Связь/ВыгрузитьСвязь]
* [//Связь/Удалить связь оптимизатором]
* [//Связь/Загрузить связь из БД]
* [//Связь/Получить связи ячейки по фильтру]
* [//Связь/Изменить связь]
* [//Связь/Сохранить связь в БД]
* [//Связь/Собрать список связей для ячейки]
* [//Связь/Найти связь]
* [//Связь/Получить направление связи]
* [//Связь/Установить ссылки на ячейки]
* [//Связь/Установить ссылку на ячейку есть есть]
* [//Связь/Проверить наличие временной ячейки]
* [//Связь/Получить инверсное направление связи]
* [//Связь/Проверить равенство двух связей]
* [//Связь/Проверить подобие двух связей]
* [//Связь/Проверить связь не временная]
* [//Связь/Заменить идентификаторы ячеек]
* [//Связь/Получить связанную ячейку]
* [//Связь/Получить идентификатор связанной ячейки]
* [//Связь/Проверить наличие идентификатора ячейки]
* [//Связь/Получить краткое текстовое описание связи для отладчика]

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
MLink
++++Свойства - данные
++++Методы

+++Дополнительная информация 
++++Связь с кешированием изменений или с прямой записью в БД
 Из wiki:///V:/МоиПроекты/SIM/Работать%20здесь/NewConcept/NewConcept.wiki?page=ОбсуждениеДваТипаСвязей
 Можно предложить два типа связей, аналогично ячейкам: как адаптер записи из таблицы БД и частично или полностью кешировать чтение и запись. То есть, аналог MCellA MCellB MCellBds
Надо обсудить это применительно к разным типам ячеек.
* В целом интересно, но усложняет и так запутанную схему операций. Пока достаточно постоянной или временной связи в том виде, как они реализованы в Тапп2. 
++++Представление связи в памяти
[Связь] в [Контейнер]е представлена одним объектом. Ссылка на объект связи хранится в КоллекцияСвязейКонтейнера, а также в  КоллекцияСвязейЯчейки связанных этой связью ячеек. НаправлениеСвязи Восходящая-Нисходящая относительно каждой из связанных ячеек можно вычислить вызовом специальной функции.

Для КоллекцияСвязейКонтейнера, а то и для КоллекцияСвязейЯчейки, хорошо бы сделать индексы по идентификаторам ячеек и типу связи.
Можно использовать для этого КоллекцияЯчеекКонтейнера, получая оттуда ячейки и их КоллекцияСвязейЯчейки. Но не все ячейки Солюшена загружены в контейнер. Тут еще надо обдумать, как сделать все и просто и производительно. 
Поскольку словарь состоит фактически из списков связей ячеек, но не все ячейки загружены в память, то можно оптимизировать, соединив в общую структуру списки связей и списки ячеек. 

Ячейка класса MCellA не хранит связи в памяти, она только выдает их общий список. Все изменения связей ячейки MCellA немедленно должны записываться в БазаДанныхСолюшена. Временные связи могут ссылаться на MCellA ячейки от временной ячейки.
Ячейка класса MCellB хранит связи в памяти, кешируя их чтение. Думаю, запись в связи нет смысла кешировать.

++++Представление связи в базе данных солюшена
В ТаблицаСвязейБд каждой связи соответствует одна запись. В представление связи в памяти входят идентификаторы связанных ячеек, СостояниеСвязи, ТипСвязи, флаг удаления, ссылки на ячейки, находящиеся в памяти. Если ячейка не загружена в память, или не записана в связь, ссылка = null. 
ИдентификаторСвязи не является первичным ключом в ТаблицаСвязейБд. Первичный ключ ТаблицаСвязейБд независимый, так же, как для ячеек. И выборка и поиск связей в ТаблицаСвязейБд осуществляется так же, как для ячеек.

++++Постоянные и временные связи
Связи могут быть постоянные и временные.
ПостояннаяСвязь существуют только между ПостояннаяЯчейка ячейками.
ПостояннаяСвязь записаны в ТаблицаСвязейБд.
Для ПостояннаяСвязь, в которых ячейки MCellA или MCellBds, изменения свойств связи немедленно пишутся в БД. *По крайней мере, пока положим так. Когда будет вся концепция, тогда уточним.*

ВременнаяСвязь связи существуют между ПостояннаяЯчейка или ВременнаяЯчейка ячейками. 
ВременнаяСвязь связи не записаны в ТаблицаСвязейБд, существуют только в памяти.
todo.концепция.сс.переработать: Временные связи создаются между ячейками временными или отложенной записи. Они записываются в ТаблицаСвязейБд  при сохранении ячейки операцией Save(). *(это надо проверить и доработать)*.
ВременнаяЯчейка может иметь только временные связи, следовательно, если хотя бы одна из связываемых ячеек ВременнаяЯчейка, связь создается временная.
ВременнаяСвязь не записывается в БазаДанныхСолюшена, пока не будет сохранена ее ВременнаяЯчейка. Следует сделать функцию проверки и кеш-флаг, чтобы не проверять каждый раз. Хотя если делать флаг, его надо сбрасывать при потере статуса...

Между ПостояннаяЯчейка ячейками можно создать временную связь, а потом при необходимости сохранить ее, сделав постоянной.
Постоянные связи реализованы подобно MCellB ячейкам.
Временные связи реализованы подобно MCellBt ячейкам.
Остальные варианты реализации связей не вносят существенных преимуществ, но  усложняют устройство системы. Поэтому они не рассматриваются.

todo.концепция.сс.обдумать: Модифицировать непосредственно экземпляры связей можно только если связь временная, поскольку сами связи не записывают автоматически изменения в БазаДанныхСолюшена. Для постоянных связей изменения делаются через ячейки, которые должны иметь соответствующий инструментарий для изменения всех полей связи.
 
Поля идентификаторов ИдентификаторЯчейки представлены классом [//MID], и при чтении создают и возвращают копию идентификатора. Это снижает производительность, но защищает от случайного изменения полей идентификатора. 
 
Для ПостояннаяСвязь связей, существующих в таблице, изменения полей связи [Связь/ПолеТипСвязи], [Связь/ПолеОписаниеСвязи], [Связь/ПолеФлагАктивностиСвязи], [Связь/ПолеСервисноеЗначениеСвязи], [Связь/ПолеСостояниеСвязи] (через проперти) в памяти должны немедленно записываться в ТаблицаСвязейБд. При загрузке связи, ее свойства заносятся в память *специальной функцией, чтобы избежать перезаписи* в ТаблицаСвязейБд . Для временных связей они записываются (создаются записи связей) при *сохранении ячейки вызовом Save().*

++++Межконтейнерные связи
Связь, хранящаяся в некотором [Контейнер]е Б, может использовать не только одну, но и обе ячейки [Контейнер]а А. Тогда можно вынести в [Контейнер] Б некоторые сложные или межслойные отношения, а в [Контейнер]е А хранить простые отношения внутри некоторого слоя.

++++Доступ к контейнеру
См. СсылкаЯчейкиНаКонтейнер.


+++Операции со связями
(неполные, надо уточнить и переработать список. См. ФункцииНавигатораВерсия0, СписокФункциональностиДвижка - их надо взаимодополнить с текущим описанием. )
* todo.концепция.сс: Из-за КонцепцияМультиконтейнерность, одна или обе связанные связью ячейки могут находиться в СтороннийСолюшен, и тут надо составить список таких вариантов и продумать операции для всех этих вариантов. Существующие тексты годятся только для примера, и должны быть сильно переработаны.

++++Попытка описать варианты операций
Попробуем расписать все операции с ячейками и связями для каждого типа ячеек.
1) создание связи
2) удаление связи
3) поиск связи
4) изменение связи
5) загрузка ячейки
6) создание ячейки
7) получение связей ячейки
8) сохранение ячейки
9) выгрузка ячейки из памяти
10) удаление ячейки

варианты ячеек и связей:
MCellA - MCellA
MCellA - MCellB норм
MCellA - MCellBds отлож
MCellA - MCellBt врем
MCellA - незагруженная ячейка
MCellB норм - незагруженная ячейка
MCellB норм - MCellA
MCellB норм - MCellB норм
MCellB норм - MCellBds отлож
MCellB норм - MCellBt врем
MCellBds отл - незагруженная ячейка
MCellBds отл - MCellA
MCellBds отл - MCellB норм
MCellBds отл - MCellBds отлож
MCellBds отл - MCellBt врем
MCellBt врем - незагруженная ячейка
MCellBt врем - MCellA
MCellBt врем - MCellB норм
MCellBt врем - MCellBds отлож
MCellBt врем - MCellBt врем 

Поскольку связи создаются между MCellA/MCellB ячейками, их реализация должна быть в MCell классе, так как не содержит специфичного для подклассов кода. 



