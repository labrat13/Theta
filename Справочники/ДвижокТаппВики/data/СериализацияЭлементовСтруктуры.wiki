++ Сериализация Элементов Структуры
[template: ШаблонКарточкиГлоссария]
Состояние: [В РАЗРАБОТКЕ]

todo.глоссарий.форма: Опишите определение сущности здесь.


+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* todo.глоссарий.форма: Перечислите обязанности сущности здесь.
* 

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
 todo.глоссарий.форма: Укажите здесь соответствующий класс кода проекта, если известен.
++++Свойства - данные
++++Методы

+++Дополнительная информация 

Astra
Сериализация
В_РАЗРАБОТКЕ - разработать подробности.
База может быть сериализована в текстовый или двоичный файл, и обратно.
Текстовый файл для анализа пользователем, двоичный - для хранения промежуточных копий-шагов.

Элемент выводится записью. Формат записи фиксированный.
Запись содержит код типа элемента (ЗаголовокСнимка, контейнер, ячейка, связь, ...) и длину.
Поля произвольной длины предваряются размером поля. 

Сериализация данных ячейки должна будет использовать МетодОбработчикЯчейки обработчики из ячеек типов данных.

Сериализовать можно как память-файл-память, бд-файл-бд, ...
Однако может не хватить памяти для большой базы, чтобы всю разместить в памяти при загрузке.
Так что надо думать... 
Можно попробовать уменьшить объем занимаемой памяти для ячеек, которые в таблице хранятся.
Как совместить варианты ВАР3_НадежноИлиБыстро в одном коде, чтобы при варианте а) MCell содержал только проперти и код доступа к бд, что обеспечивает небольшой размер занимаемой памяти, а при варианте б) еще и данные как кэш.
-Хранить данные динамически - указатели занимают место.
-Можно создать два класса MCell - один содержит поля данных, другой только получает их значения из таблицы.
Через одни и те же проперти.
Соответственно, будет создаваться такой объект, который нужен, при полной идентичности интерфейсов.
Оставим это на второй прототип.
Сериализация в двоичный файл:
1)Выводим шапку файла
2)Выводим контейнер: одна запись.
3)Выводим список ячеек, список связей, каждый элемент в одной записи.
4)...

Десериализация:
1)Читаем шапку файла, что она там содержит? Проверяем, что версия совпадает, и все такое.
2)Читаем контейнер, создаем новый контейнер и записываем.
3)Читаем список ячеек, создаем ячейки и записываем.
4)Читаем список связей, находим ячейки, создаем связи, создаем прямые ссылки на ячейки в связях.
5)...

