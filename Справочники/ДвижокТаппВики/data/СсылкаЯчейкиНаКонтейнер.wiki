++ Ссылка Ячейки На Контейнер
[template: ШаблонКарточкиГлоссария]
Состояние: [В РАЗРАБОТКЕ]

Обсуждение проблемы доступа к контейнерам из КодДвижка.


+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* todo.глоссарий.форма: Перечислите обязанности сущности здесь.
* 

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
 todo.глоссарий.форма: Укажите здесь соответствующий класс кода проекта, если известен.
++++Свойства - данные
++++Методы

+++Дополнительная информация 
* [Контейнер] является основной точкой доступа к большей части функциональности [Движок]а. Поэтому нужно обеспечить доступ к нему из любой части кода.
* В коде движка Тапп23 операции с ячейками использовали глобальную ссылку на объект текущего контейнера.
    * Эта версия движка предполагала только один контейнер.
    * Это поле хранилось в статической переменной класса ячейки или контейнера (в разных версиях Тапп). Такое решение экономило память. Чтобы не хранить ссылку на объект контейнера в каждом объекте ячейки. Была всего одна ссылка на все и любые ячейки.
    * Это поле должно было инициализироваться после создания контейнера.
    * Это позволяло из любого места кода получить ссылку на контейнер. И все операции можно было вызывать из объекта ячейки. 
    * Это делало код очень наглядным, вся работа в приложении шла с ячейками, контейнер там почти не использовался.
* В многоконтейнерном варианте (См КонцепцияМультиконтейнерность) ссылка на контейнер в ячейке должна как бы быть индивидуальной, храниться в каждой ячейке. 
    * Но для ВнешняяЯчейка это бессмысленно. Внешняя ячейка находится в другом процессе, код текущего процесса не может работать с адресом из другого процесса.
    * Поэтому нужно разрабатывать другую концепцию работы. Которую придется распространить на все ячейки вообще, так как механизм работы с ячейками должен быть одинаков для любых ячеек, локальных и внешних и всяких.
* Связь *ячеек из разных контейнеров* в каждом контейнере содержит экземпляр ячейки и идентификатор связанной ячейки.
    * Для сохранения изменений состояния связи в БазаДанныхСолюшена коду КодДвижка нужна ссылка на [Контейнер], в котором прописан АдаптерБД, и где хранится эта самая ссылка. И на контейнеры связанных ячеек. Это может быть один или даже пять разных контейнеров, так как связь может храниться в другом контейнере, чем связанные ячейки.  
* Необходимо реализовывать работу так, чтобы операции со связанными ячейками выполнялись одинаково, несмотря на то, какому контейнеру они принадлежат - локальному или удаленному. Этого можно добиться созданием АПИ, который абстрагирует выполнение операций, а не использовать ссылку на контейнер ячейки напрямую в коде.
* Сейчас можно вместо статической ссылки на текущий контейнер разместить таким же образом некий статический глобальный объект (ДиспетчерСолюшенов? МеханизмКоммуникацииКонтейнеров? ), в который направляются запросы получения объекта [Контейнер]а для выполнения операций из кода ячейки или любого другого места кода движка. Этот запрос есть функция, которая возвращает объект запрошенного контейнера по ИдентификаторСолюшена из ячейки или связи.
    * Если запрашивается ЛокальныйСолюшен, запрос возвращает ссылку на объект локального солюшена.
    * Если запрашивается СтороннийСолюшен, то возвращается ссылка на ПроксиВнешнегоСолюшена - объект-прокси для этого внешнего солюшена. И через этот прокси выполняются операции в этом внешнем солюшене.
    * Таким образом операции ячеек и связей выглядят прозрачно и в рамках общей концепции.
* Требуемый здесь ДиспетчерСолюшенов является КлиентРегистратораСолюшенов. Он должен принимать ИдентификаторСолюшена, запрашивать у РегистраторСолюшенов алреса СтороннийСолюшен, соединяться с ними через МеханизмКоммуникацииКонтейнеров, и создавать для ЛокальныйСолюшен объекты ПроксиВнешнегоСолюшена, которые и будут симулировать СтороннийСолюшен для операций ЛокальныйСолюшен.
* Вывод: следующему прототипу нужна концепция работы МногоконтейнернаяСистема. См КонцепцияМультиконтейнерность.
todo.концепция.сс: Поэтому надо придумать новый, быстрый способ получения ссылки на объект [Контейнер]а по его ИдентификаторСолюшена из любого места КодДвижка. Или вообще переработать всю эту систему, чтобы единообразно получать объекты контейнеров, идентификаторы которых указаны в связях и ячейках: ИдентификаторСвязи, ИдентификаторЯчейки связанных ячеек, ЯчейкаТипаСвязи, ЯчейкаСостоянияСвязи, итд.

