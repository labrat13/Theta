++ Сборка КТА

От КТА решено отказаться.
КТА был попыткой накапливать метаданные о методе - диапазоны входных условий итд.

++++Заметки о КТА
Код, обслуживающий операции, не готов. Создается. Планируется использовать вызовы исполняемого кода или интерпретацию скриптов. Планируется поддерживать исполнение абстрактных методов. 

Методы могут быть организованы в иерархическую СтруктураМетодов для обеспечения работы абстрактных и агрегатных методов. Методы независимы от классов сущностей, и могут использоваться через связи с ячейками типа (классами сущностей) или через иерархию методов.
В Тапп2 методы использовались при помощи КТА. КТА это вроде комплект типов аргументов, он содержит комплект аргументов и результатов и их значений. КТА позволяли хранить информацию о использовании метода, о перенаправлении вызова, оценки качеств методов. Эти КТА хранились вместе с методом и позволяли кэшировать результаты методов так, что сами методы можно было не запускать. Хотя это кэширование годилось только для простых случаев, когда результат проще вычислить, чем найти в списке, где хранятся тысячи этих КТА. А в сложных случаях вообще от них только вред. Так что идея КТА неудачная. Хотя КТА оценивал качество методов и историю их выполнения, но фактически это была профанация, так как теория таких вещей не разработана.   
todo.концепция.методы: О КТА надо лучше узнать в старых документах Тапп2, чтобы извлечь полезные сведения для концепции методов.

++++1
КТА	- представляет комплект типов аргументов для метода. Это вариант использования метода.

Поскольку один и тот же метод может вызываться разными классами, с разными типами данных, введены КТА. КТА хранит типы, значения, метаданные о вызове метода, это обеспечивает проверку корректности вызова метода.  КТА фиксирует использование метода для вызывающего класса. В методе есть список кта, в котором сохраняются все вызовы метода всеми классами. Предполагается использовать этот список для статистики и оптимизации выбора в иерархии методов. Планируется, что метаданные КТА позволят определять допустимый диапазон значений и типов аргументов, оценивать пригодность метода для конкретного использования и т.д. КТА содержит идентификатор класса/объекта, который вызывает метод. Для уменьшения размера списка КТА периодически, во время очередного вызова, проводится оптимизация - удаление дублирующихся записей, выделение трендов, и т.д.

Связь класс-метод связывает классы и методы. В экземпляре метода существует список связей с классами. В экземпляре класса - список связей с методами.
Поскольку методы используются классами через КТА, то связь указывает на класс с одной стороны, и на КТА метода с другой. Таким образом, один класс может быть связан с несколькими методами, и даже с нескольким кта одного метода, различающимися типами аргументов (например, если метод абстрактный).

Метод содержит основной КТА - КТА0. Этот КТА создается при создании метода, и определяет набор и типы аргументов, которые метод использует.
Предполагается, что КТА будет использоваться совместно с иерархией абстракций методов, что позволяет создавать и использовать абстрактные методы так же, как и конкретные. То есть, если КТА описывает абстрактные типы данных, то метод можно вызвать для конкретных типов данных. При этом автоматически должен быть найден и вызван подходящий метод, информация об этом выборе/вызове зафиксирована в КТА абстрактного метода, данные возвращаются как будто они исполнялись абстрактным методом.

Можно попробовать ввести в КТА показатель эффективности метода, который записывается по результатам метода. Можно будет выбрать подходящий метод на основе эффективности, определить границы эффективной работы метода, и прочие интересные возможности. Но это потом.
Вычислить сразу новое среднее значение не получилось, так как нельзя вычислить реально среднее значение только по старому среднему значению и новому значению. Еще нужна мощность старого среднего значения, чтобы определить вклад нового значения в это общее среднее. А без этого постоянно актуального среднего значения оценка эффективности оставалась фикцией. 

Связь метод-метод связывает методы таким же образом, как и аналогичные связи класс-класс. Можно выделить абстракцию, агрегацию методов, и соответственно реализовать СтруктураМетодов. Для большей гибкости, методы связываются через концепцию КТА, обычно через кта0.


