++ M Cell Collection
[template: ШаблонКарточкиГлоссария]
Состояние: [В РАЗРАБОТКЕ]

Класс для КоллекцияЯчеекКонтейнера.


+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* todo.глоссарий.форма: Перечислите обязанности сущности здесь.
* 

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
 todo.глоссарий.форма: Укажите здесь соответствующий класс кода проекта, если известен.
++++Свойства - данные
++++Методы

+++Дополнительная информация 
* См старый проект Тапп23: wiki:///V:/МоиПроекты/SIM/Работать%20здесь/NewConcept/NewConcept.wiki?page=MCellCollection
++++Свойства в коде движка Тапп23
+++++Поля
private Dictionary<uint, MCell> m_items; - словарь ячеек
private uint m_maxCellId; - максимальное значение ИД ячейки, при создании 0, при добавлении или удалении ячейки проверяется и изменяется. Кеширует поиск макс ИД для операций назначения ИД новой ячейке. Надо переделать это и весь код на новую концепцию идентификатора.

+++++Операции
public bool containsName(string name) - Проверяет, что список содержит ячейку с указанным именем. Аналогично можно запросить список ячеек по имени. Только тут быстрее, поскольку не надо формировать список возвращаемых ячеек. Нужна для имен, которым положено быть уникальными (имена типов ячеек, например).
public bool containsCell(uint cellid) - Проверяет, что список содержит ячейку с указанным идентификатором. Для проверки наличия ячейки в списке перед загрузкой из БД.
public MCell getCell(uint cellid) - получить ячейку по идентификатору, null if not exists.
public MCellCollection getCells(MCellTemplate template) - Получить список ячеек по значению свойств, описанных в ячейке-шаблоне. Все поля в шаблоне, не содержащие null, используются для отбора ячеек. Эта универсальная функция работает медленно, и может быть заменена на упрощенные версии при оптимизации движка. Но для прототипа она хороша.
public string getNameByID(uint cellid) - получить имя ячейки по идентификатору. Быстрая функция. возвращает нуль если ячейки нет в списке.
public uint getCachedMaxID() - Возвращает максимальный идентификатор для ячеек коллекции. Использует m_maxCellId как кеш. Если нужно пересчитать заново, надо обнулить m_maxCellId.
public void AddCell(MCell cell) - Добавить ячейку в словарь, обновить maxCellId
public void RemoveCell(MCell cell) - Удалить ячейку из словаря, обновить maxCellId
public void RemoveCell(uint cellid) -  Удалить ячейку из словаря, обновить maxCellId
public void Clear() - удалить все ячейки. Просто очищает словарь. Наверно, надо бы сохранять ячейки перед удалением? Или это делает вызывающий код?
