++ Текст Три

Движок тарр.
Его надо делать. Надо наводить порядок в документации.
Нужен документ, описывающий, что это такое в общих чертах, что оно должно делать.
Нужны диаграммы, чтобы быстро получить общее представление о том, что в проекте есть и как взаимосвязано.
Поскольку работа над проектами ведется кусочками с перерывами, модульно, то важна фиксация всех возникающих подразумеваний в документах.
Такая формальная рутинная работа по выуживанию из общего объема идей отдельных сущностей, присвоение имен и описание свойств и функций.

Поскольку вся документация запутана, идеи всех версий навалены кучей, предлагается все документы внести в список, каждый документ соотнести с релизом, когда он был создан.
Составить список версий, релизов движка, и с ними соотнести каждый документ.
Затем каждый документ осмотреть и разбить на параграфы. 
Каждый параграф содержит какую-то законченную мысль.
Каждый параграф имеет имя-ссылку, по которому на него можно ссылаться из других текстов.

В механизмах транзакций всех БД вложенные транзакции не поддерживаются. 
Это значит, что нельзя полностью откатить сложную операцию, использующую отдельные методы, которые тоже используют транзакции.
Например, пользователь вызывает метод А, который начинает транзакцию а, затем вызывает метод Б, который начинает транзакцию б.
Если метод Б неудачен, он откатывает транзакцию б, и возвращает ошибку. 
Метод А затем или вызывает другой метод С, который выполняет алгоритм другим путем, или откатывает транзакцию а и возвращает ошибку.
Тут надо, чтобы внутри транзакции а можно было открыть и откатить транзакцию б. Коммит транзакции б должен приводить к завершению транзакции б и выход в транзакцию а.
Хотя вроде бы в MsSqlСУБД 2005 такое есть, но это надо проверять экспериментально.
А остальные БД это наверно не поддерживают.
Еще в движке есть вариант СолюшенБезБД, где транзакций вообще не предусмотрено.
Предлагается сделать собственный модуль транзакций на базе [Лог]а.
В [Лог] выводить дамп объекта до и после операции и код операции. 
Это одновременно [Лог] дывижка и [Лог] транзакций.
Объекты должны сериализовываться в компактный дамп для выведения в [Лог] и передачи по сети.
Этот [Лог] будет очень большим. Удалять из него старые записи нежелательно - это не позволит откатывать базу обратно, если потребуется откатить БД на несколько сеансов назад.
Но [Лог] будет огромным. Тут можно попробовать оптимизацию, но лучше просто писать все в [Лог].
[Лог] должен содержать еще и комментарии пользователя и комментарии, вставляемые в методах в целях отладки.
Тогда можно использовать все движки БД, используя транзакции через [Лог].
Эту подсистему [Лог]а надо сделать слоем между контейнером и адаптером БД. Она независима от БД, поскольку операции движка одни и те же.
Ей отправляются команды по получению-отправке данных, и она же будет производить [Лог] и откатывать транзакции.
Надо это продумать.
