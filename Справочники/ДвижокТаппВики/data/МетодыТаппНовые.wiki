++ Методы Тапп Новые

Методы и их наследование – переопределение.
- ячейка наследует методы от ячейки типа.
- ячейка наследует методы от ячейки типа данных.
- …

-ячейка переопределяет некоторые наследуемые методы.
-ячейка запрещает некоторые наследуемые методы.
А что есть запрещенный метод? Он есть, но его нельзя использовать. Либо его нет и не должно быть.

Ячейка типа ячейки  предоставляет методы для работы с ячейкой этого типа. То есть вроде класса в Си.
Ячейка типа данных предоставляет методы для работы с данными ячейки. То есть, тоже вроде класса.
Это как?
Пример: ДатаВремя.
Ячейка типа ячейки предоставляет операции для работы с датой.
Ячейка типа данных предоставляет операции для работы с Int64 числом тиков, которые реально хранятся в ячейке ДатаВремя.  

Концепция семантического слота.

Ячейка связана с методами. Ячейка обозначает связь с методом, выполняющим некоторую операцию, семантическим слотом. То есть,
А) связью определенного типа, соответствующую функции.
Б) связью типа СемантическийСлот с ячейкой, обозначающей семантический слот (как тогда прицеплять метод?)

Вариант а) выглядит проще. Тип связи обозначает семантический слот. Конечная ячейка связи – метод, который реализует семантический слот. Если слот запрещен, метод = Запрещено. Если слот неизвестен – нет метода – то конечный метод в связи  = Неизвестно.
А если метод импортируется, то конечный метод какой?

То есть, если ячейка не имеет связи семантического слота, то эта связь берется из ячейки типа, то есть, надячейки, или вернее от всех этих надячеек по иерархии.
Эту концепцию надо дорабатывать.

Вариант а) предполагает просмотр всех ячеек связанных с текущей ячейкой, для сбора методов. Это может быть долго. Надо просмотреть все ячейки иерархии и определить, какие методы наследовать.

Вариант б) предполагает, что каждая ячейка содержит свой комплект связей с методами. Это значит, очень много связей будет в структуре.

Можно предложить вариант с):
Ячейки-объекты содержат объявления семантических слотов. Не содержат связи с методами. Методы экспортируются от ячейки типа, которая будет играть роль класса.
Ячейка типа содержит все связи с методами, которые будут экспортироваться ячейкам-объектам.

Методы перекрываются при помощи концепции семантического слота, то есть, по имени.

Ячейка – объект может перекрыть какой-то метод созданием связи с методом, занимающим соответствующий семантический слот.

Ячейка может запретить слот метода, создав связь с специальным объектом Запрещено в этом слоте.

Таким образом, получаем, что число связей ячейки зависит от концепции системы сущностей.

Концепцию семантических слотов надо еще обдумать и придумать как ее реализовать.


Если предположить, что методы ячейки собираются из ее надячеек, комбинируются в методы самой  ячейки, то:
А) если ячейка не привязана к унаследованным методам, то надо собирать все методы надячеек, сопоставлять переопределения, чтобы вернуть пользователю набор доступных ячейке операций.
Б) если ячейка связана с унаследованными методами, то получение списка методов будет быстрым, но число связей ячейки будет большим. Смену метода будет проще согласовать.

Функция – аргументы, результат, алгоритм.

rel://files/мет1.png

rel://files/мет2.png

Операторы являются объектами классов и связаны отношениями:
- потока управления  - друг с другом.
- классификации – с классами операторов
- потока данных – с данными.
- принадлежности к функции – с функцией.

Данные-объекты классов данных связаны отношениями:
- использование данных – потока данных – с операторами
- классификации – с их классами данных
- принадлежности к функции – с функцией.

Аргументы – это данные, которые инициализируются вне алгоритма. Они используются в алгоритме, но для удобства их можно внести в список в функции.
Результаты – это данные, которые инициализируются в алгоритме и возвращаются в вызывающий код. Для удобства пользователя их можно внести в информацию о функции.

 rel://files/мет3.png
 
 rel://files/мет4.jpg
 
 
Функция это объект, содержащий объекты. Это конструкция, декларация функции. Когда функция исполняется, создается …

Функция хранится в контейнере как шаблон. Функция состоит из объектов классов. То есть, функция это класс, из которого производятся реальные объекты для использования в других функциях  (исполнения?).
Алгоритм – класс.
Операции алгоритма – класс некоторого суперкласса операции.
Данные – 
Список аргументов – 
Результаты – 

Слои абстракций
1)	классы элементов, отдельно друг от друга.
2)	Сборки подклассов, образующие прототип функции и ее структуру.
3)	Объекты подклассов, повторяющие строение функции и реально выполняющие ее работу.

Использование функций в функциях.
Функция А вызывает функцию Б. Функция С вызывает функцию Б,
Тогда получается, на уровне 2 функция Б будет содержать ссылки из А и С и в А и С. Куда же ей идти при выполнении? Так нужно чтобы функции 2 уровня использовали в алгоритме функции 2 уровня.

Это можно представить так:
Функции на 2 уровне содержат в алгоритме функции 3-го уровня. В виде только основной ячейки функции – только для связей потока управления и потока данных (результатов и аргументов).
Собственно 3 уровень создается интерпретатором при вызове этой функции. Это аналогично вызову в исполняемом коде, когда функция сполняется изолированно от семантического контекста.
Таким образом, алгоритм функции содержит объекты функции, которые имеют вход и выход управления, вход аргументов и выход результатов. Любые связи с глобальными данными, существующие внутри функции, не видны снаружи.
При исполнении функции интерпретатор создает ее структуру и исполняет, затем возвращает результаты и уничтожает структуру функции. (Можно ее не создавать, а просто интерпретировать)
Рекурсивные функции – сами себя вызывают – погружают в рекурсию интерпретатор. Ведь тело-алгоритм на уровне 3 не существует в системе, а создается динамически. То есть, рекурсивные функции будут работоспособны.

Константы – в алгоритме на уровне 2 заявлена константа, например, число 7. Это на уровне 3 копируется константу=7 и так работает дальше.
Эта константа есть класс целочисленных констант, для которого значение не задается – абстрактный класс.
Все аргументы – ячейки. Есть передача по ссылке – то есть, передеют саму ячейку. Есть передача по значению – передают копию ячейки. Надо определиться, когда нужна копия, когда оригинал.

ТранзакцияСолюшена – каждая функция должна полностью откатываться.

rel://files/мет5.jpg





