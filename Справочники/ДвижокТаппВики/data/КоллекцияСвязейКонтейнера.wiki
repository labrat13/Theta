++ Коллекция Связей Контейнера
[template: ШаблонКарточкиГлоссария]
Состояние: [//ДОПОЛНИТЬ]

Коллекция связей для централизованного хранения связей в [Контейнер]е.

+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* [//КоллекцияСвязейКонтейнера/Список связей]
* [//КоллекцияСвязейКонтейнера/Максимальный идентификатор связи] - аналогично КоллекцияЯчеекКонтейнера.
* [//КоллекцияСвязейКонтейнера/Конструктор].
* [//КоллекцияСвязейКонтейнера/Получить список связей]
* [//КоллекцияСвязейКонтейнера/Получить количество связей в коллекции]
* [//КоллекцияСвязейКонтейнера/Получить связи, удовлетворяющие заданному ПоисковыйШаблонСвязи]
* [//КоллекцияСвязейКонтейнера/Проверить наличие связи в списке] 
* [//КоллекцияСвязейКонтейнера/Проверить наличие связи по ПоиcковыйШаблонСвязи]
* [//КоллекцияСвязейКонтейнера/Проверить наличие подобной связи по cellId, Axis, Active] 
* [//КоллекцияСвязейКонтейнера/Добавить связь]
* [//КоллекцияСвязейКонтейнера/Удалить связь по экземпляру связи]
* [//КоллекцияСвязейКонтейнера/Удалить связь под указанным индексом]
* [//КоллекцияСвязейКонтейнера/Удалить связь по идентификатору связи]
* [//КоллекцияСвязейКонтейнера/Удалить все связи]
* [//КоллекцияСвязейКонтейнера/Получить список связей указанной ячейки]
* [//КоллекцияСвязейКонтейнера/Установить ссылку на ячейку в связях коллекции]
* [//КоллекцияСвязейКонтейнера/Получить связи из указанного списка, которых нет в текущем списке]
* [//КоллекцияСвязейКонтейнера/Заменить идентификатор ячейки в связях коллекции]
* [//КоллекцияСвязейКонтейнера/Получить максимальный идентификатор временной связи]
* [//КоллекцияСвязейКонтейнера/Получить число временных связей]
* [//КоллекцияСвязейКонтейнера/Получить словарь счетчиков поля axis связей] - для оценки применения всех ТипСвязи в [Контейнер]е.

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
* MEngineLinkCollection 
++++Свойства - данные
* Список связей
* Максимальное значение идентификатора связи в списке - аналогично КоллекцияЯчеекКонтейнера.
++++Методы
* 

+++Дополнительная информация 
КоллекцияСвязейКонтейнера хранит все связи загруженных в память ячеек в одном общем списке. 

[Связь] в [Контейнер]е представлена одним объектом. Ссылка на объект связи хранится в КоллекцияСвязейКонтейнера и КоллекцияСвязейЯчейки связанных этой связью ячеек. 

КоллекцияСвязейКонтейнера реализована списком, это обеспечивает быстрое добавление и медленный поиск по сравнению со словарем.
Есть идея реализовать через словарь, подобно КоллекцияЯчеекКонтейнера. Надо посмотреть как это скажется на производительности.

КоллекцияСвязейКонтейнера в текущей реализации не содержит индексов, но они могут быть добавлены позже. Поэтому глобальные операции поиска связи реализованы здесь. Сейчас они должны использовать КоллекцияСвязейЯчейки, если известны идентификаторы ячеек.

КоллекцияСвязейКонтейнера намного больше, чем КоллекцияСвязейЯчейки. Здесь надо применять специальные методы ускорения работы. Однако пока делаем просто, а усовершенствуем после обкатки всего движка.

По сравнению с КонцепцияТапп1, есть преимущества: память экономится, создание связей ускоряется, удаление связей ускоряется, и есть единообразный доступ ко всем связям контейнера.

* КоллекцияСвязейЯчейки, как и КоллекцияСвязейКонтейнера, реализован классом MLinkCollection. У них очень схожий список функциональности.
Но в КоллекцияСвязейКонтейнера после релиза нужно добавить индексы для ускорения поиска.
Сейчас поиск ведется полным перебором списка. Это замедляет работу.
Введение индексов целесообразно только в КоллекцияСвязейКонтейнера, поэтому ее надо выделить в производный от MLinkCollection класс вроде MEngineLinkCollection.
* todo.концепция.сс: нужно унифицировать интерфейс КоллекцияСвязейКонтейнера и КоллекцияЯчеекКонтейнера.
    * чтобы унифицировать интерфейс КоллекцияСвязейКонтейнера и КоллекцияЯчеекКонтейнера, надо сначала описать этот интерфейс на основе реального использования, и лучше до написания кода. 
    * А еще для этого надо заново проектировать весь движок. 
* Нужен метод Закрыть() в коллекции, он должен очищать коллекцию и вызываться в конце функции закрытия солюшена.
    * для этого ксть метод Clear(), а почему он не вызывается там - недоделка.
* после Clear() надо вызывать GC.Collect() для освобождения памяти. Иначе объекты не выгружаются из памяти.
    * Это надо вызывать при очистке солюшена или при закрытии солюшена.
       Вызывать сборку мусора когда попало - неправильно, так как она сильно тормозит процесс. 
* ВременныйСписокФункцийКлассаКоллекцииСвязей

