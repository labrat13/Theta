++ Концепция Оптимизатор
++++Описание концепции
Описывает оптимизацию и автоматическое обслуживание структуры сущностей

+++Состояние
* Немного почистил, натаскал материалов со всей вики. Но все равно, маловато. 
* Теперь надо собрать все в концепцию и обозначить функционал.
* todo.концепция.оптимизатор: Написать список функциональности [Оптимизатор]а для разрабатываемой ВерсияДвижка.
* todo.концепция.оптимизатор: Выявить, что [Оптимизатор] должен делать с другими подсистемами солюшена для их оптимизации.
* todo.концепция.оптимизатор: Надо создать страницу СписокПравилОптимизатораВерсииТапп и составить *список правил оптимизации*, по которым [Оптимизатор] должен проверять СтруктураСущностей. Часть ПравилоОптимизации можно задать для Движок, а часть - для ПользовательскаяКонцепцияСолюшена, для соблюдения ее ПравилоОптимизации. Возможно, там потребуется собственный *дополнительный оптимизатор*.
    * Эти ПравилоОптимизации нужно формализовать и описать, чтобы контролировать их соблюдение. 
    * Наверно, в концепции [Оптимизатор]а эти ПравилоОптимизации будем описывать и хранить, пока не найдем более подходящее место.
* todo.концепция.оптимизатор: Сейчас оказывается, что оптимизацию выполняет и отдельное приложение [Оптимизатор] из МодельКомпонентовСистемы, и часть движка, которая делает это прямо в процессе работы пользователя. Это надо доопределить - что и кто должен делать, и как это организовать.
    * Предлагается переименовать в ПриложениеОптимизатор, чтобы отделить оптимизатор как подсистему от оптимизатора как приложения - клиента движка.  Но тогда надо и исправить все ссылки в вики и текстах, и более подробно описать их различия и функциональность, и завести подсистему оптимизатора в ГлоссарийПроекта. И наполнить ее.

+++Материалы
* [Оптимизатор] - приложение для оптимизации [Солюшен]а.
Пользователь использует [Оптимизатор] для оптимизации СтруктураСущностей  и других частей [Солюшен]а.

Оптимизатор выполняет разработанные проверки и модификации СтруктураСущностей. Эти процедуры зависят и от ПользовательскаяКонцепцияСолюшена и от ВерсияДвижка и от прочих факторов. Эти процедуры предположительно будут дополняться по мере развития проекта Тапп.

Это служебный код, выполняющий оптимизацию СтруктураСущностей. В частности, удаление потерянных цепочек данных и выявление сомнительных мест в СтруктураСущностей.

[Оптимизатор] предназначен для поддержания порядка в СтруктураСущностей.
[Оптимизатор] может рассматриваться как пользователь (агент) [Солюшен]а, [Движок]а.

[Оптимизатор] физически удаляет элементы, помеченные к удалению - сборка мусора.
[Оптимизатор] запускается в течение СеансПользователя для удаления помеченных удаленными ячеек и связей. Это разгружает СтруктураСущностей после интенсивной работы. Это уборка, сборка мусора в течение СеансПользователя.
Это НеактивнаяЯчейка или НеактивнаяСвязь.
При удалении через [Навигатор] или [Метод], постоянный (не временный) ЭлементСтруктурыСущностей не удаляется, только помечается удаленным. [Ячейка] физически удаляется [Оптимизатор]ом, если у нее нет активных связей. НеактивнаяСвязь удаляются вместе с НеактивнаяЯчейка.
НеактивнаяЯчейка удаляется из СтруктураСущностей в процессе оптимизации. (См. [Оптимизатор]) Это удаление может повлечь за собой операции с другими частями СтруктураСущностей, поэтому должно выполняться отдельно от обычной работы [Солюшен]а, в определенных случаях оно требует вмешательства пользователя.
* Поскольку [Оптимизатор] реализует удаление невостребованных ячеек, КонцепцияОптимизатор должна определить, каким образом [Оптимизатор] это делает, чтобы удаление не приводило к нарушению целостности СтруктураСущностей.
При удалении ячейки и связи не удаляются немедленно, а помечаются удаленными. Помеченные удаленными, они игнорируются при любых операциях. Хотя поскольку они остаются в системе, они замедляют работу, поэтому надо периодически запускать [Оптимизатор] для очистки. Можно также постановить, что помеченные удаленными ячейки и связи не загружаются в память.

Структура из временных ячеек или связей в памяти - не обслуживается [Оптимизатор]ом.

[Оптимизатор] оптимизирует БазаДанныхСолюшена - индексы и таблицы.
[Оптимизатор] запускается вне СеансПользователя для обслуживания, оптимизации СтруктураСущностей в БД и самой БазаДанныхСолюшена. 

[Оптимизатор] оставляет сообщения в [Лог]е в ходе работы. Для них нужно определить номер класса сообщения лога.

[Оптимизатор] выполняет дефрагментацию пространства идентификаторов.

++++Виды оптимизации
А) Встроенная оптимизация. Оптимизатор запускается внутри СеансПользователя.
    * Этот процесс связан с [//Контейнер/Оптимизировать Солюшен] и [//Контейнер/Выгрузить ячейку].
    * Это для проверки и оптимизации текущего состояния СтруктураСущностей.
    * Процесс оптимизации займет некоторое время в зависимости от размера СтруктураСущностей. Надо решить, можно ли его прерывать по желанию пользователя.
    * Однако этот процесс оптимизации не должен сильно изменять уже загруженные в память ячейки и связи, чтобы это не было полной перезагрузкой контейнера. 
Б) Выделенная оптимизация. Оптимизатор запускается в собственном СеансОптимизатора.
    * Это для проверки и оптимизации СтруктураСущностей. СеансПользователя не может начаться в течение СеансОптимизатора.
    * Этот процесс может сильно изменить СтруктураСущностей, и должен выполнять все предписанные проверки и изменения СтруктураСущностей.
* todo.концепция.оптимизатор: Можно ли прервать процесс оптимизации, или надо обязательно его завершить?
* todo.концепция.оптимизатор: Как вообще представить процесс оптимизации пользователю? Надо как-то прицепить к этому процессу прогрессбар и кнопку останова.  
    * Это и для встроенной оптимизации и для выделенной.
    * В поле состояния солюшена [//Контейнер/ПолеСостояниеСолюшена] или [//Контейнер/ПолеСостояниеДвижка] занести состояние Идет Оптимизация? Чтобы остальные механизмы ждали, пока оптимизация закончится и можно будет работать с Солюшеном?

++++О запросах пользователю
* Сейчас предлагается запрашивать пользователя по возникающим проблемам.
* Пользователю будет трудно разобраться с тысячей проблем с разными ячейками - по каждой надо рассмотреть СтруктураСущностей, принять решение, выполнить его, возможно, породив еще несколько ошибок.
* Весь этот процесс решения проблемы надо продумать, чтобы можно было и откатить это решение, и заняться такой тысячей задач планомерно и тупо вручную их пилить, с диаграммами и классами серьезности проблем. 
* Возможно, это что-то вроде ошибок при компиляции сложного проекта в студии. Если так, то можно позаимствовать оттуда некоторые решения.

++++Проблемы концепции
В СтруктураСущностей могут существовать ячейки, которые Оптимизатор не должен удалять, несмотря на то, что они не имеют связей с другими ячейками. 
    * Например, это ячейки, у которых есть ВнешняяСвязь связи с ячейками из СтороннийСолюшен. Хотя эти связи не присутствуют в Солюшене, поскольку их тогда будет очень много и это затормозит работу. Это концепция связей с ВнешняяЯчейка ячейками, ее еще надо проработать. Так, например, как же тогда будут исполняться  МежконтейнерныйМетод, если у ячеек нет внешних исходящих связей - они есть в присоединенном контейнере, но их нет в этом - не перебирать же все контейнеры и искать связи? Так что эту тему еще надо разрабатывать, и она много подсистем затронет.
    * Или это могут быть ячейки ЯчейкаОписатель, связи которых реализованы через поля свойств ячеек и связей. Хотя они должны подключаться к остальной СтруктураСущностей, входя в коллекцию или иерархию ячеек-описателей. Но и там может быть допущена ошибка - пользователь может по ошибке удалить некоторую ветвь иерархии, и тогда оптимизатор должен будет разобрать всю  иерархию и удалить ячейки-описатели. А это повлечет за собой порчу или удаление всех обычных ячеек данных типов. 
        * Вообще, ячейки ЯчейкаОписатель надо удалять по особым правилам - сначала надо убедиться в отсутствии использующих их ячеек. Но вот как это единообразно реализовать? Это надо дополнительно прорабатывать. Можно было через связи, но связи тут не используются. Просматривать все ячейки и искать использование идентификаторов ячеек-описателей? Надо делать метод, который ищет ячейки, прицепленные к ячейкам-описателям?

++++Начальный элемент
В СтруктураСущностей должен существовать начальный элемент. Мир/ World. Мир является исходной точкой навигации по СтруктураСущностей. Все прочие структуры ячеек начинаются с него.
В СтруктураСущностей может быть несколько независимых графов ячеек-описателей, все они должны начинаться с ячейки Мир. Иначе они будут недоступны для использования и могут быть удалены [Оптимизатор]ом.

++++Особое поведение
[//КонцепцияТапп1]
Связь типа «неопределено» Это специальный тип связи в Тапп1. Связь в никуда. Обозначает, что отношение есть, а конечный объект не определен. Этакое предчувствие. [Оптимизатор] должен определить, что с ней делать или запросить пользователя. Удалить ли связь или назначить ей конечный объект?

+++Список операций оптимизатора
++++Список функций встроенного оптимизатора
* todo.концепция.оптимизатор: Составить список функций встроенного оптимизатора. Описать, насколько можно, каждую функцию.
* todo.концепция.оптимизатор: Перенести список на отдельную страницу

++++Список функций внешнего оптимизатора
* todo.концепция.оптимизатор: Составить список функций встроенного оптимизатора. Описать, насколько можно, каждую функцию.
* todo.концепция.оптимизатор: Перенести список на отдельную страницу

++++Проверка правильности структуры сущностей
Это отдельная процедура, облегчающая наблюдение за целостностью СтруктураСущностей и выявление ошибок и проблем прямо в течение СеансПользователя.
Проверка правильности СтруктураСущностей выполняется пользователем или автоматическим [Оптимизатор]ом.
Для этой проверки надо определить набор правил и вынести ее в отдельную функциональность.
Проверку удобно было бы запускать и из [Навигатор], чтобы сразу же на месте править ошибки.
Она не относится к Оптимизатору вообще-то. Но Оптимизатор должен ее запускать, чтобы сообщать о проблемах в СтруктураСущностей.

++++Дефрагментация пространства идентификаторов
* При работе системы получаются пробелы в использовании пространства идентификаторов ячеек и связей.
* [Оптимизатор] может производить дефрагментацию пространства идентификаторов ячеек и связей.
* Дефрагментация пространства идентификаторов это замена идентификаторов в ячейках, методах и связях для тех ячеек, которые не имеют связей вне обрабатываемого контейнера. 
* Нужно полностью заменить все существующие идентификаторы ячейки.
* Поскольку МетодИзКода не поддается такой модификации (там могут использоваться обращения к ячейкам по вшитому в код ИдентификаторЯчейки), нужно соблюдать правило - в этих методах идентифицировать ячейки только по уникальному НазваниеЯчейки. 
    * Следовательно, для дефрагментации идентификаторов НазваниеЯчейки должно быть уникальным.
* Для ячеек и связей, имеющих внешние контакты, изменение идентификаторов приведет к разрушению структуры, поэтому тут надо думать. Вероятно, от идеи дефрагментации идентификаторов пока нужно отказаться.
 
++++Оптимизация структуры ячеек
[Навигатор] и [Метод]ы (не всегда) осуществляют *мягкое удаление*, а [Оптимизатор] – окончательное. 

(Это сырое определение из старой, иерархической схемы Тапп1. Для текущей схемы это надо переработать.)
Если у Ячейка нет восходящих (входящих?) связей, и это не ячейка типа или другой служебный объект, то его можно удалить.
Перед удалением Ячейка Оптимизатором надо пометить связи ячейки состоянием «удалено», а после удаления объекта  удалить и связи. Хотя можно сразу удалить и объект и его связи.

У [Оптимизатор]а должно быть много проходов, поскольку надо будет разобрать длинные потерянные цепочки, а за один проход удаляется один этап цепочки. Если использовать рекурсию, то проходов меньше, но выше сложность оптимизатора.
Схема прохода [Оптимизатор]а:
1 – удаление объявленных недействительными связей
2 – удаление объектов, не имеющих надобъектов и удаление всех их связей.
Повторять проходы до тех пор, пока обнаруживаются связи или объекты, подходящие под определение удаляемых.

Более проработанное предложение:
* Удалять ячейки и связи, помеченные неактивными, во время работы и в СеансОптимизатора. 
* Проверять правильность структуры связей ячеек.
    1 Удалять связи, в которых обе ячейки одинаковы - selflink 
    2 Помечать связи неактивных ячеек неактивными 
    3 Удалять неактивные связи 
    4 Удалять ячейки, не имеющие связей
* При удалении постоянной ячейки корректировать МаксимальныйИдентификаторПостояннойЯчейки 
* После оптимизации обновить СтатистикаСолюшена в ФайлСолюшена, если она там есть.

++++Оптимизация подсистемы ресурсов
ФайлРесурса удаляется [Оптимизатор]ом при удалении ЯчейкаФайлаРесурса.
Оптимизатор должен: 
* Оптимизировать структуру ячеек ресурсов
    * Удалить недействительные ЯчейкаФайлаРесурса, удалить связанные с ними ФайлРесурса. 
    * Выявить ЯчейкаФайлаРесурса, для которых отсутствуют соответствующие ФайлРесурса. Выдать сообщение пользователю об отсутствии файлов.
    * Выявить ФайлРесурса, для которых в СтруктураСущностей не существует ЯчейкаФайлаРесурса. Удалить их или представить пользователю для принятия решения.
* Оптимизировать структуру каталогов
    * Удалить пустые каталоги. Пустой каталог не содержит ФайлРесурса, хотя может содержать другие файлы. Пустые каталоги замедляют работу и расходуют память и диск.
    * Обнаружить и представить пользователю одноименные ФайлРесурса (с разным расширением), чтобы пользователь решил, какой из них удалить или переименовать. 
* Обновить СтатистикаСолюшена в части ФайлРесурса.
* Проверка и согласование использования типов связи
    * [Оптимизатор] должен получить список используемых типов связи активных связей и сравнить со списком существующих ячеек типов связей, чтобы выявить несоответствия. 
    * Все несоответствия представить пользователю.
    * Все ячейки типов связей должны входить в системную коллекцию типов связей. 

++++Оптимизация БД
Выполняется не во время работы, а в СеансОптимизатора. 
* Оптимизировать индексы таблиц ячеек и связей 

++++Бекап БД проекта
* todo.концепция.оптимизатор: Решить, нужен ли бекап БазаДанныхСолюшена и как это должно выглядеть.

++++Оптимизация Солюшена
Произвести оптимизацию открытого Солюшена:
* Проверка целостности структуры связей
* Поиск висящих ячеек и связей 
* удалить ненужные связи 
* Удаление ячеек помеченных как удаленные
* оптимизировать индексы таблиц БД
* оптимизировать таблицы БД 
* Создание резервной копии БД
* оптимизировать прочие подсистемы проекта.
* Вывод ОтчетОптимизации.
Для оптимизации [Оптимизатор]у нужен монопольный доступ к СтруктураСущностей.
todo.концепция.оптимизатор: Описать оптимизацию структуры солюшена
todo.концепция.оптимизатор: Описать ОтчетОптимизации.

+++Поиск по вики
* done.концепция.оптимизатор: Просмотреть все тексты, где упоминается оптимизатор и стаскать сюда полезные материалы.
* todo.концепция.оптимизатор: Из натасканных материалов извлечь полезную информацию.
* [//ОперацииЯчеек] - рассматривается удаление связи оптимизатором
* [//СборкаОптимизацияРесурсов1] - тут весь текст  для оптимизатора, его надо вынести в отдельную страницу или раздел и сюда ссылку принести.

++++Удаление типа связи Навигатором или методом
* Получить список связей удаляемого типа.
* Представить их пользователю для согласования
* Пометить все связи неактивными
* Пометить ячейку удаляемого типа связи неактивной
* [Оптимизатор] должен удалить ячейку и связи.







