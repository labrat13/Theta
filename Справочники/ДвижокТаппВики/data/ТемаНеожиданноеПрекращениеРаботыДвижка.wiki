++ Тема Неожиданное Прекращение Работы Движка
[//СБОР МАТЕРИАЛОВ] - надо еще поискать материалы. Пока что я просмотрел вики, но более ничего не нашел.

+++1
Если пользователь снимет процесс через Диспетчер задач Windows, или отключится питание или нажмет сброс, то процесс с [Движок] завершится без какого-либо уведомления. Тогда Лог окажется неправильно законченным. Что делать в этом случае? Только при последующем запуске Движка это станет актуальным. И только если потребуется искать что-то в предыдущих СеансЛога. Тогда надо дописать этот незаконченный ФайлЛогаСолюшена так, чтобы последующее его чтение ИнтерпретаторЛога и ИтераторЛога не вызывало ошибок. Но сначала надо определить, что СеансЛога был прерван. Как это сделать? 
        * todo: разработать способ выявления и обозначения неожиданного конца СеансЛога в ФайлЛогаСолюшена.
        * И надо сообщить об этом пользователю. Каким образом? Через КаналСообщенийЛога или через MessageBox?

+++О сбое Движка - перенести в подходящее место          
* В случае сбоя в работе Движка ведение лога прекратится и СеансДвижка не будет закрыт в последнем ФайлЛогаСолюшена.
    * Эту ситуацию надо учитывать особо. Это возможно, если это что-то неучтенное, например, сброс компьютера.
    * Если возникнет критическое исключение, код Движка должен обработать его, вывести сообщения в лог и закрыть сеансы и все подсистемы Движка более-менее корректно.
    * Но выполнение приложения может быть прервано. (Сброс, пропадание питания, зависание). Надо чтобы Солюшен не оказался поврежден.
        
+++2
* Если пользователь неожиданно прекратил работу, (См. ТемаНеожиданноеПрекращениеРаботыДвижка) БД будет в несогласованном состоянии. Можно предложить разбить работу пользователя на этапы, и каждый этап до завершения можно откатить, а по завершении фиксировать, как транзакцию.
Тогда при обрыве соединения просто откатить изменения СтруктураСущностей до последнего устойчивого состояния.

+++3
* Нужно вести *учет уровня вложенности* ТранзакцияСолюшена. Именно для лога. В БазаДанныхСолюшена свои транзакции на уровне операций Движка. Не надо это путать.
    * Тогда надо в МенеджерЛога хранить список текущих вложенных транзакций. Элемент списка состоит из координат ЗаписьЛога о начале транзакции, идентификатора транзакции.
        * При начале новой транзакции добавлять в конец списка объект ТранзакцияПользователя с данными новой транзакции.
        * При завершении транзакции удалять из списка эту транзакцию. 
    * Можно будет автозавершить транзакции при закрытии [Движок]а.
    * А как быть при аварийном прекращении работы [Движок]а? Как тогда выявлять эти незавершенные транзакции?
        * Тогда Солюшен надо восстанавливать по логу до некоторой начальной точки - до начала самой верхней незавершенной транзакции. И это должен делать некий механизм восстановления солюшена после аварии.
        * А как этот механизм обнаружит такую аварию? Это надо придумать. Чтобы сразу при старте Солюшена обнаружить его предыдущее некорректное завершение, вывести сообщение пользователю и начать восстановление.
        * Проблема в методике работы. 
            * Если каждую из последовательных операций пользователя он будет оформлять в отдельную транзакцию, то откат до начала транзакции приведет к отмене предыдущих действий - какого-то этапа в работе пользователя. И затем надо будет эту работу снова произвести, и потом доделать оставшиеся операции. Без этого знания алгоритма и места остановки ничего восстановить не получится.
            * Если же всю работу пользователь заключает в транзакцию, а отдельные операции в вложенные транзакции, то откат до начала первой незавершенной транзакции вернет Солюшен в состояние, существовавшее до начала работы. Это удобнее, можно просто снова запустить прерванный алгоритм.
        * В целом, хорошо бы для ТранзакцияСолюшена хранить еще и описание - комментарий пользователя - что эта транзакция будет включать в себя. Например: Создание модели таблицы Транзисторов. Такой текст при просмотре лога помог бы пользователю понять, что делалось, и на каком этапе произошел сбой системы.
            * done: Добавить поле Описание транзакции в объект ТранзакцияСолюшена.     



