++ Концепция Тапп Версии Бар/Контейнер Версии Бар
[//В РАЗРАБОТКЕ]
Свойства контейнера пока приведены приблизительно, так как его концепция и общая компоновка [//Движок]а еще не придуманы.
Это все еще надо разработать и увязать.

Класс MEngine - Это название отражает концепцию Контейнера как Движка целиком, но это еще надо продумать, и возможно, поменять название класса.


[//Контейнер] представляет собой среду для существования элементов [//ЭлементСтруктурыСущностей], и, соответственно, [//Сущность]ей. Контейнер предоставляет средства для функционирования и обслуживания [//СтруктураСущностей].  

[//Контейнер] имеет [//ИдентификаторСолюшена], по которому его можно найти.  Планируется использовать его для реализации [//МногоконтейнернаяСистема] (См КонцепцияМультиконтейнерность).

[//Контейнер] ([//Движок]) предоставляет набор операций, с помощью которого выполняются базовые операции с элементами [//ЭлементСтруктурыСущностей]. Из этого набора операций пользователь создает специфические операции сущностей, именуемые [//Метод]ами. Контроль структуры [//СтруктураСущностей] выполняется пользователем или автоматическим [//Оптимизатор]ом.

+++Что известно
* Контейнер ранее поддерживал интерфейс ImElement.
    * Но нигде не применялось это.
    * Солюшен должен поддерживать интерфейс для работы [//РегистраторСолюшенов], но это другой набор свойств и функций. Вероятно, незачем поддерживать ImElement для контейнера. 
* Вопрос: Контейнер содержит Солюшен как подсистему, или наоборот, Солюшен включает в себя Контейнер как подсистему?
    * Это надо решить в основном для удобства работы с контейнером из стороннего кода.
    * Все операции с ячейками и связями в реальности проходят через Контейнер, хотя вызываются из разных мест.
    * Логично, что пользователь работает с Солюшеном. Это просто понять пользователю.
    * Солюшен включает в себя различные подсистемы, в том числе и контейнер.
    * Пользователь должен работать с Солюшеном через АПИ Движка.
    * Важно сделать работу пользователя выглядящей просто и максимально скрыть внутренние детали реализации.
    * Сейчас я не могу ответить на этот вопрос, возможно есть и технические ограничения в этом выборе.
    * В коде Тапп23 это реализовано так: Контейнер представлен как Движок, и включает в себя все остальные подсистемы и частные поля контейнера. И подсистему Солюшена в том числе. Хотя непонятно, что в этом раскладе делает подсистема Солюшена. Пользователю отдается объект MEngine, который дает доступ к разным свойствам, в основном, внутренним. И делались попытки эти внутренние свойства скрыть, но они все же оказывались нужны для работы с объектами ячеек и связей из других приложений. Без АПИ движка. И эта проблема Контейнер или Солюшен с тех пор актуальна.
    * Если Солюшен будем считать первым, то он должен будет поддерживать интерфейс для [//МногоконтейнернаяСистема]. И хранить остальные менеджеры подсистем. А у Контейнера будут только несколько собственных полей. Хотя их все еще достаточно много.   
* Свойства Контейнера в основном являются свойствами Солюшена и должны храниться в ФайлСолюшена, а не в БД.
* 

+++Свойства контейнера
Тут есть свойства для ImElement, но большая часть этих полей не используется для Солюшена.
Их надо отсюда убрать, поскольку ImElement я намерен не поддерживать в контейнере.
Но пока поля оставим наверно, они много места не заняли бы. Или все же убрать, потом ввести при необходимости? 
++++Идентификатор солюшена
Один публичный идентификатор типа MID для совместимости с ImElement.
Один приватный идентификатор типа int для быстрого использования в коде движка.
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
++++Название солюшена
Название солюшена для пользователя
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
++++Описание солюшена
Текстовое описание, null по умолчанию.
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
++++Флаг активности солюшена
Сейчас эта концепция не придумана, откуда будет браться значение и как это значение будет использоваться.
Вероятно, обозначает что солюшен активен. Хотя зачем нужны неактивные Солюшены - непонятно.
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
++++Сервисное значение солюшена
Поле для значения, используемого в сервисных операциях (поиск в графе,  обслуживание и так далее) //default 0
Сейчас эта концепция не придумана, откуда будет браться значение и как это значение будет использоваться.
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
Для совместимости с ImElement.
++++Флаг только чтение солюшена
Сейчас эта концепция не придумана, откуда будет браться значение и как это значение будет использоваться.
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
Для совместимости с ImElement.
++++Состояние солюшена
Идентификатор ячейки состояния Солюшена.
Сейчас эта концепция не придумана, откуда будут браться эти ячейки состояния и как это значение будет использоваться.
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
Для совместимости с ImElement

++++РежимСозданияЯчейки
См. [//РежимСозданияЯчейки]. Ранее [//DefaultCellMode].
Это кеш, значение загружается из ФайлСолюшена при открытии [//Солюшен]а.
++++ФайлСолюшена
Ссылка на объект файла солюшена, хранящий свойства солюшена.
++++СсылкаНаОбъектСолюшена
Статическая ссылка для доступа к Объекту контейнера из кода.
++++СостояниеДвижка
Обозначает состояние движка подобно СерверSQLБД. 
Это незаконченная попытка подтянуть концепцию к стандартным решениям.
todo: надо продумать необходимость и использование этого поля!
++++Менеджер идентификаторов ячеек
++++Менеджер идентификаторов связей
++++Коллекция ячеек
++++Коллекция связей
++++Адаптер БД
++++Менеджер Солюшена
++++Менеджер Лога
++++Менеджер Снимков
++++Менеджер Ресурсов
++++Менеджер Методов
++++Менеджер Сети

+++Материалы
++++Свойства контейнера Тапп2
В Тапп23 эти поля были перенесены в ФайлСолюшена, который стал хранить всю информацию о Солюшене.
* version - MVersion.VersionId - версия кода движка
* step  - MEngine.SnapshotManager.Step - номер НомерШагаСолюшена снимка
* lognum - MEngne.Log.logNumber - номер файла [Лог]а
* logdetail - MEngine.Log.logdetail - флаги детализаци [Лог]а
* descr - MEngine.description - ОписаниеСолюшена
* name  - MEngine.Name - имя проекта
* sflag - MEngine.serviceFlag сервис флаг контейнера
* state   -  MEngine.State - ид ячейки состояния контейнера
* cellmode - MEngine.defaultCellMode 
* idcon - ИдентификаторСолюшена

++++Свойства контейнера Тапп23 разных версий
+++++собственные поля
* private static MEngine m_currContainer;/// Reference to current container object 
* private MProjectInfo m_prjFile;/// Project file info Объект используется для хранения свойств контейнера, доступ к которым осуществляется через проперти контейнера.
* private MEngineState m_engineState; /// Engine current state for user
* private MCellMode m_cellmode;//DefaultCellMode Это кеш, значение загружается из файла проекта при старте контейнера        
* private int m_containerId;/// fast Id of container objectЭто кеш, значение загружается из файла проекта при старте контейнера

+++++свойства из ImElement        
* private MID m_containerId;/// Id of container objectЭто кеш, значение загружается из файла проекта при старте контейнера
* private String m_description;// текстовое описание, null по умолчанию.Это кеш, значение загружается из файла проекта при старте контейнера
* private bool m_isactive;// flag is element active or deleted //default trueЭто кеш, значение загружается из файла проекта при старте контейнера
* private int m_serviceflag;// Поле для значения, используемого в сервисных операциях (поиск в графе,  обслуживание и так далее) //default 0
* private string m_name;// имя контейнера для пользователя
* private UInt64 m_stateId;// идентификатор ячейки состояния контейнераЭто кеш, значение загружается из файла проекта при старте контейнера
        
+++++менеджеры
* private MCellIdManager m_cellIdMan;/// Cell Id manager
* private MLinkIdManager m_linkIdMan;/// Link Id manager
* private MCellCollection m_cellCollection;/// Cell collection
* private MLinkCollection m_linkCollection;/// Link collection
* private MDbLayer m_dbLayer;/// Reference to database adapter 
* private MLog m_logManager;/// Log manager
* private MProject m_prjManager;/// Project manager object
* private MSnapshot m_snapshotManager;/// Snapshot manager
* private MResource m_resourceManager;/// Resource manager
* private MNetwork m_netManager;/// Network manager
* private MMethod m_methodManager;/// Method manager object

 

