++ Выгрузка Ячеек Из Контейнера

+++++Введение
Сейчас считается, что ячейки загружаются в память при востребовании. Выгружаться они должны либо явно, по завершении использующей их операции, либо при завершении работы [Движок]а. Остальные варианты не определены.
Не всегда в операциях можно явно выгрузить ячейки.
При навигации по структуре [Навигатор] должен загружать ячейки для просмотра, и вряд ли будет выгружать их - ему часто приходится возвращаться обратно, незачем выгружать ячейки.
Вообще, при работе могут оставаться в памяти невостребованные ячейки. Они просто занимают память, это тормозит работу системы, а найти и выгрузить их пока вроде как нечем.

Поскольку объем занимаемой СтруктураСущностей памяти довольно большой, предполагается, что в контейнере одновременно находиться будет немного ячеек. Надо своевременно выгружать неиспользуемые ячейки и связи. Максимальный объем памяти в системе с файлом подкачки будет около 1.8 Гб.
В общем, в контейнере вряд ли уместится более 4млн ячеек, с минимальным количеством связей.
Надо придумывать механизм для автоматической выгрузки неиспользуемых и неактивных ячеек MCellB, MCellA типов.

+++++Предложения
todo.концепция.сс: Запланировать проработку вопроса о выгрузке ячеек из памяти в [Навигатор]е, в методах и в общем случае.
 Необходима цельная концепция жизненного цикла ячеек в памяти, варианты выгрузки: при недостатке памяти; для оптимизации производительности; итд.
* Эта выгрузка распространяется только на MCellA и MCellB. MCellBt и MCellBds ячейки выгружаются вручную или при завершении сеанса работы [Контейнер]а. 
* Можно предложить автоматический запуск процесса выгрузки ячеек по достижении некоторого предела занятой памяти. Количество занятой или свободной памяти надо периодически контролировать. Память занимают и связи и ячейки, но выгружать можно только ячейки вместе с их связями.
* Можно ввести механизм выгрузки неиспользуемых в течение длительного времени ячеек.
    Для этого механизма потребуется:
    * В объекте Ячейки иметь [ВремяДоступаЯчейки] поле таймштампа типа Int64, хранящее момент, когда ячейка была загружена в память, или момент последнего обращения к ячейке. Это поле не сохраняется в БД, снимок или [Лог]. Прямой доступ к полю тоже не нужен. Поле сделать приватным.
    * Операцию ОбновитьВремяДоступаКЯчейке в [Ячейка], обновляющую [ВремяДоступаЯчейки] поле таймштампа по DateTime.Now.Ticks. - она вызывается непредсказуемо.
    * Глобальный счетчик времени в операционной системе или в [Контейнер]е.
        Поле Int64, источник DateTime.Now.Ticks Размер поля 8 байт, точность 100нс. 
        Для получения возраста ячейки надо вычесть из  значения DateTime.Now.Ticks значение поля [ВремяДоступаЯчейки] ячейки. Результат затем можно сравнить с аргументом или перевести в DateTime для пользователя. 
    * Процедура поиска и выгрузки давно не использовавшихся ячеек из КоллекцияЯчеекКонтейнера. С параметром - удалить все ячейки, не использовавшиеся Х секунд. Связи ячейки тоже выгружать. Поэтому для ускорения выгрузки лучше выгружать сразу списками - сначала составить список-словарь ячеек для выгрузки, потом выгружать связи, просматривая этот список для каждой связи, можно ли выгружать ее. Связь не выгружать, если одна из ячеек есть в памяти и нет в списке выгрузки. Как-то так... 
    * Обеспечить обновление [ВремяДоступаЯчейки] таймштампа ячейки при каждом и любом обращении к ячейке,
       за исключением операций поиска ячейки по параметрам итп.
        * Определить список таких операций и как реализовать этот сброс таймштампа.
        * Видимо, операции поиска итд должны использовать особенные операции доступа к данным ячейки.
        * Вообще, составить список всех операций с ячейками, и уже в них распределить, какие операции обновляют таймштамп, какие нет. Для этого требуется полная карта операций с ячейками.
* Ввести операцию выгрузки вообще всех ячеек, кроме временных и ячеек отложенной записи. Это пригодится в случаях, когда фиксируется некоторая точка состояния СтруктураСущностей, завершение этапа, когда можно все выгрузить, такая небольшая уборка рабочего стола. Как назвать этот момент, пит-стоп?
* Можно посмотреть механизм сборки мусора в NET Framework. Там та же проблема есть, но там проще - удаляются только объекты, на которые нет больше ссылок. Это все четко определяет. А у нас тут все сложнее. Все же у меня недостаточно опыта использования этих ячеек. Может быть, можно просто требовать от приложения явно выгружать используемые им ячейки в конце операции? Или они неявно загружаются и приложение не знает о том, что они загружены в контейнер, поэтому не сможет их скомандовать выгрузить? Тут надо разбираться.
* А еще у ячеек есть связи. Их тоже надо выгружать. Наверно, вместе с ячейками. 
    * Но нельзя выгружать связь, если одна из ее ячеек остается в памяти.
    * Сначала надо составить список невыгружаемых ячеек, а потом проверять каждую связь контейнера. Если связь содержит идентификаторы невыгружаемых ячеек, то не выгружать связь.
        * Это только для связываемых ячеек, или ячейки ТипСвязи тоже считать? Вроде только для связываемых ячеек.  

+++++Выводы
todo.концепция.сс: Проработать концепцию жизненного цикла ячеек, включить туда выгрузку ячеек.
* Добавить в объект [Ячейка]и private Int64 поле таймштампа загрузки в память, функции установки таймштампа, вычисления промежутка времени до указанного момента.
* Определить общий список операций с ячейкой, по каждой из них решить, надо ли в ней обновлять таймштамп.
Соответственно описать требования к функциям.
todo.концепция.сс: Ввести операцию выгрузки вообще всех ячеек, кроме временных и ячеек отложенной записи.