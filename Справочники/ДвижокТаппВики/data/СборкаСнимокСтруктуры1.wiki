++ Сборка Снимок Структуры1
[//ПЕРЕДЕЛАТЬ] - выделить сущности в иерархии снимков, раздельно их определить, отделить в разные сборки, переработать. Некоторые сущности только выделены в тексте, но не внесены в глоссарий, так как они порождены алгоритмом выполнения операций, и могут быть изменены вместе с алгоритмом.

Весь этот проект Тарр будет развиваться медленно, если он не будет востребован в повседневной практике.
Для создания полезной системы в [Солюшен] надо импортировать данные.
Данные обычно берутся в виде таблиц, эти таблицы переносятся в [Солюшен].
В [Солюшен]е таблица перестраивается, превращаясь в древовидный набор сущностей.

Для удобства применения эта СтруктураСущностей может быть выведена в отдельный ФайлСнимка.
СнимокСтруктуры будет представлять эти данные, и можно достаточно просто импортировать его в нужный [Солюшен].
Можно будет собирать вместе отдельные наборы данных, создавая большой функционально законченный комплект данных в некоторой предметной области.

[Движок] содержит средства для сохранения СтруктураСущностей в ФайлСнимка, загрузки из ФайлСнимка. Такой ФайлСнимка семантически обозначается сущностью: СнимокСтруктуры.
СнимокСтруктуры предназначен для архивирования или экспорта СтруктураСущностей. 
СнимокСтруктуры представляет собой полную копию СтруктураСущностей, сериализованную в ФайлСнимка.
Ячейки снимка должны образовывать структуру с минимумом внешних связей и стандартным значением этих связей.
Тогда экспорт снимка в другой [Солюшен] будет простым.

СнимокСтруктуры может быть десериализован  обратно в СтруктураСущностей.
Загрузку данных из СнимокСтруктуры лучше всего производить во временные ячейки MCellBt или ячейки отложенной записи MCellBds. Загрузка требует множества изменений идентификаторов ИдентификаторЯчейки ИдентификаторСвязи, и ячейки отложенной записи лучше всего подходят для загрузки снимка на постоянное хранение. После загрузки эти новые ячейки нужно сохранить. Ячейки временные хуже подходят, поскольку при их сохранении надо будет менять идентификаторы во всей СтруктураСущностей. Зато они удобны, если снимок загружается только для выполнения операции, и эти данные не нужны в СтруктураСущностей постоянно.

+++Материалы
СтруктураСущностей может быть сериализована в ТекстовыйФайлСнимка или ДвоичныйФайлСнимка, и обратно.
* ТекстовыйФайлСнимка предназначен для анализа СтруктураСущностей пользователем. Это скорее всего HTML-вариант СтруктураСущностей, который можно просматривать, переходя по ссылкам, созданным из связей ячеек.
* ДвоичныйФайлСнимка предназначен для резервного копирования или экспорта СтруктураСущностей полностью или частично. 

+++Типы снимков
СнимокСтруктуры может быть Полным или Частичным.
При загрузке ПолныйСнимокСтруктуры контейнер перезаписывается, при загрузке ЧастичныйСнимокСтруктуры — дополняется. Соответственно разное поведение. 
++++Полный снимок структуры
Добавлено в ПолныйСнимокСтруктуры 20.12.2016 08:02 
* ПолныйСнимокСтруктуры содержит всю СтруктураСущностей [Солюшен]а. Полный снимок представляет собой копию структуры, и при его загрузке создается новая база данных. Поэтому он должен содержать всю необходимую информацию.
* Полный снимок представляет собой моментальную копию *всех* ячеек и связей из памяти и БазаДанныхСолюшена. Эти ячейки и связи извлекаются из КоллекцияЯчеекКонтейнера и КоллекцияСвязейКонтейнера и из БазаДанныхСолюшена.
Таким образом, будет сериализована полная копия Солюшена.
Если СолюшенБезБД, когда в солюшене нет БазаДанныхСолюшена, то из БазаДанныхСолюшена не берем ничего.
При десериализации нужно сначала создать новую БазаДанныхСолюшена (если она должна существовать в солюшене согласно данным снимка), затем набить ее данными согласно снимку. 
На выходе процесса десериализации должен быть [Контейнер] в том же состоянии, что и на момент создания снимка.

++++Частичный снимок структуры
Добавлено в ЧастичныйСнимокСтруктуры 20.12.2016 08:02 
* ЧастичныйСнимокСтруктуры содержит некоторый УчастокСтруктурыСущностей, объединенный неким смыслом. Такой снимок может храниться как ресурс.
* При загрузке эта часть добавляется к уже существующей СтруктураСущностей. Нужно согласовывать структуру, это усложняет загрузку и может окончиться неудачей.
* [//В РАЗРАБОТКЕ] - разработать теорию про загрузку СтруктураСущностей из [Снимок].
ЧастичныйСнимокСтруктуры представляет собой копию УчастокСтруктурыСущностей [Солюшен]а. ЧастичныйСнимокСтруктуры предназначен для экспорта части СтруктураСущностей в другие солюшены или для создания снимка СнимокРесурс.
ЧастичныйСнимокСтруктуры включает в себя как временные так и постоянные ячейки. Удобно использовать временные ячейки, но они также будут связываться с постоянными ячейками внутри и вне сериализуемого УчастокСтруктурыСущностей. Частичный снимок не должен ссылаться на внешние временные ячейки, так как это приведет к рассогласованию СтруктураСущностей. Таким образом, частичный снимок должен включать в себя все временные ячейки, на которые ссылаются ячейки, находящиеся внутри УчастокСтруктурыСущностей.
В общем, необходимо какм-то образом определить сериализуемый УчастокСтруктурыСущностей и отличить ячейки, помещаемые в снимок, от остальных ячеек в СтруктураСущностей. 
При десериализации необходимо проверить, что ячейки, на которые ссылаются ячейки в снимке, соответствуют по состоянию ячейкам, существующим в СтруктураСущностей. Поэтому в снимке предлагается также хранить хеши (ИД и имена?) ВнешняяЯчейка  ячеек (или целиком эти ячейки, для удобства контроля различий), при десериализации проверять наличие и состояние ячеек и выдавать предупреждения. Иначе при несовпадении версий (См. ВерсияДанныхСтруктурыСущностей) могут быть неочевидные ошибки.
Предполагается, что ВерсияАрхитектурыСтруктурыСущностей снимка совпадает с солюшеном. Хотя это надо проверять.

ЧастичныйСнимокСтруктуры предполагает резервирование идентификаторов находящихся в нем ячеек, чтобы исключить конфликты идентификаторов ячеек при загрузке. Это не позволяет проводить дефрагментацию пространств идентификаторов. Или же при загрузке нужно будет переделывать идентификаторы ячеек снимка, это делает неудобным адресацию ячеек в методах.
    * Получается, формируем список ячеек для снимка, список их связей (в единственном экземпляре), список связанных ячеек — для вычисления хешей.
При десериализации нужно проверять и согласовывать идентификаторы ячеек, при необходимости заменять их, если уже заняты.

++++Снимок-ресурс
Добавлено в СнимокРесурс 20.12.2016 08:02 
Для сокращения общего размера, из СтруктураСущностей можно удалить некий цельный кусок, выгрузив его в ФайлРесурсаСнимка. Этот файл будет в таком случае хранить редко используемые УчастокСтруктурыСущностей,  которые можно  загружать лишь при необходимости.
СнимокРесурс представляет собой ЧастичныйСнимокСтруктуры, См ФайлРесурсаСнимка. В него включаются ячейки и связи, которые затем удаляются из СтруктураСущностей. СнимокРесурс разгружает СтруктураСущностей от редко используемых участков. Таким образом можно создать специализированный УчастокСтруктурыСущностей, который имеет высокую сложность, но редко используется, выгрузить его в СнимокРесурс и загружать только при необходимости.



++++Свойства снимка
* Step - НомерШагаСолюшена снимка, номер билда СтруктураСущностей контейнера. См. ОбозначениеВерсииДанныхСтруктурыСущностей.
* СтатистикаСолюшена - размещается в СекцияКонтейнера как свойство солюшена. См. ОбсуждениеСоставСвойствСолюшена.

+++Операции
++++Десериализация в общем
1)Читаем шапку файла, что она там содержит? Проверяем, что версия совпадает, и все такое.
2)Читаем СекцияКонтейнера, создаем новый [Контейнер] и заполняем.
3)Читаем секции списков ячеек, создаем ячейки.
4)Читаем секции списков связей, находим ячейки, создаем связи, создаем прямые ссылки на ячейки в связях.
5)...

++++Создание частичного снимка.
Добавлено в ЧастичныйСнимокСтруктуры 20.12.2016 08:02
Для создания ЧастичныйСнимокСтруктуры нужен СписокЭкспортируемыхЯчеекСнимка.
Создается СписокВнешнихЯчеекСнимка. Этот список содержит все ячейки, не указанные в СписокЭкспортируемыхЯчеекСнимка, чьи идентификаторы есть в свойствах экспортируемых ячеек и их связей. Просматриваются ячейки из СписокЭкспортируемыхЯчеекСнимка и связи этих ячеек.
Если СписокВнешнихЯчеекСнимка большой, согласовать структуру будет сложно. Надо, чтобы экспортируемый УчастокСтруктурыСущностей был практически отдельной от общей СтруктураСущностей.

Эти экспортируемые ячейки перечисляются в СекцияВнешнихЯчеек снимка. При импорте данные этих ячеек сравниваются с данными ячеек СтруктураСущностей и все несовпадающие ячейки представляются пользователю на согласование. Пользователь должен согласовать СтруктураСущностей.

Затем экспортируемые ячейки перечисляются в секции ячеек, а связи - в секции связей снимка.

Опционально, после создания снимка можно удалить экспортируемые ячейки из [Солюшен]а. Соответственно, удалить и связи ячеек.
При этом, если ничего не изменится в структуре [Солюшен]а, то при загрузке этого же снимка он должен встать на место как и был.
Идентификаторы ИдентификаторЯчейки при создании снимка не изменяются.

++++Сериализация Частичный снимок:
Добавлено в ЧастичныйСнимокСтруктуры 20.12.2016 08:02
Для сериализации надо выделить СписокЭкспортируемыхЯчеекСнимка из СтруктураСущностей - Создать список идентификаторов ячеек будущего снимка. Проверить, что все внешние по отношению к будущему снимку ячейки постоянные. Временные внешние ячейки надо либо включить в список, либо запросить пользователя. Эти ячейки связаны с ячейками будущего снимка, поэтому их связи останутся в снимке — будут проблемы при загрузке снимка.
Внешние ячейки перечисляются в СекцияВнешнихЯчеек снимка. 

При десериализации элементы снимка вписываются в существующую СтруктураСущностей. При этом нужно согласовать идентификаторы, проверить совпадение внешних ячеек, ...

Получается, формируем СписокЭкспортируемыхЯчеекСнимка, *список их связей* (в единственном экземпляре), СписокВнешнихЯчеекСнимка — для вычисления хешей.
При десериализации нужно проверять и согласовывать идентификаторы ячеек, при необходимости заменять их, если уже заняты.

++++Загрузка частичного снимка
Добавлено в ЧастичныйСнимокСтруктуры 20.12.2016 08:02
Сначала читается СписокВнешнихЯчеекСнимка. 
Согласовать внешние ячейки снимка с существующими в СтруктураСущностей. Пользователь должен определить, соответствует ли указанная в снимке ячейка ячейке, существующей в СтруктураСущностей. Если полное соответствие по ИдентификаторЯчейки и данным, то можно ее считать соответствующей.
Пользователю, однако, надо представить список всех внешних ячеек, автосогласованных и не согласованных. Пользователь может указать в качестве внешней некоторую ячейку СтруктураСущностей, или создать эту ячейку как часть импортированной СтруктураСущностей.
Конечно, проще всего будет иметь некоторый *стандарт структуры*, и по нему создавать снимки, но пока такого стандарта нет.
Хотя по одной ячейке трудно определить, какую роль она играет в СтруктураСущностей, поэтому лучше было бы загрузить сразу всю СтруктураСущностей, а потом уже согласовывать ее. Однако пользователь может просто создать такую ячейку и потом уже, после загрузки всего снимка, согласовать СтруктураСущностей и заменить ячейку на соответствующую.

Создать СловарьТрансляцииИдентификаторовЯчеек. Это словарь, в котором ИдентификаторЯчейки в СтруктураСущностей сопоставлен идентификатору ячейки в снимке. Туда помещаются все идентификаторы внешних ячеек.

Далее загрузка ячеек снимка. Каждая ячейка снимка копируется в СтруктураСущностей, ее старый и новый идентификаторы вносятся в СловарьТрансляцииИдентификаторовЯчеек. После копирования всех ячеек, когда СловарьТрансляцииИдентификаторовЯчеек уже полон, в каждой новой ячейке в свойствах надо заменить старые идентификаторы на новые.

Далее загрузка связей снимка. Связи создаются в соответствии с трансляцией идентификаторов ячеек. То есть, берутся старые идентификаторы, транслируются в новые, создается связь между этими ячейками, вписываются свойства и новые идентификаторы вместо старых.

++++Замечания
Добавлено в ЧастичныйСнимокСтруктуры 20.12.2016 08:02
* При загрузке ячеек из снимка хорошо бы создавать *список ячеек, загруженных из снимка*, чтобы потом их проще было отличать от других.
    * Для чего их отличать от других? В ЧастичныйСнимокСтруктуры только? 
* Надо сохранять в снимок КлассЯчейки при создании снимка, а потом соответственно восстанавливать обратно.
    * todo.концепция.снимки: Надо составить список вариантов загрузок ячеек из снимка со сменой КлассЯчейки, и оценить, зачем это нужно и как все это выглядит. Например: из MCellBt в MCellA: зачем это надо и как это сделать? 
        * Да вроде бы не надо - ведь должна получиться точная копия СтруктураСущностей. 

++++Процесс сериализации полного снимка:
Добавлено в ПолныйСнимокСтруктуры 20.12.2016 08:02 
Создается файл ПолныйСнимокСтруктуры имясолюшена.шаг.расширение в КаталогСнимковСолюшена.
В файл пишется СигнатураФайлаСнимка 8байт. Затем записывается ЗаголовокСнимка, содержащая информацию о солюшене и снимке, число ячеек и связей. Затем пишется СекцияКонтейнера, содержащая состояние [Контейнер]а. Затем идут *секции ячеек* — из памяти, из таблицы, связанных ячеек. Вывод ячеек и связей должен использовать небольшой объем памяти, поскольку в основном память уже занимает существующая СтруктураСущностей. Для вывода ячеек и связей из таблиц используется АлгоритмСтупенчатогоПониженияРазмераВыборкиПриНедостаткеПамяти. 
Каждая секция имеет длину и контрольную сумму. Секции связей и ячеек имеют счетчики элементов. Секции элементов в секциях следуют друг за другом. Их количество хранится в секции.
Сначала сериализуются ячейки. 
Все ячейки из памяти записываются в СекцияЯчеекВПамяти. Эта часть снимка хранит состояние СтруктураСущностей в памяти на момент создания снимка — состояние ячеек MCellBt и MCellBds, присутствие ячеек в памяти итд. 
Все ячейки из ТаблицаЯчеекБд записываются в СекцияЯчеекВБд. Эта часть снимка хранит постоянные ячейки СтруктураСущностей.
Если в СтруктураСущностей участвуют ячейки ВнешняяЯчейка — находящиеся в другом контейнере — они записываются в СекцияВнешнихЯчеек. Это позволяет при десериализации проверять состояние таких ячеек, и выдавать предупреждения о проблемах совместимости версий СтруктураСущностей. Ячейки пишутся полностью, хотя, конечно, не все их поля важны, переделывать и усложнять формат снимка будем потом.
СписокВнешнихЯчеекСнимка можно получить из КоллекцияСвязейКонтейнера и ТаблицаСвязейБд, выделяя их по ИдентификаторСолюшена. В прошлой версии движка ИдентификаторСолюшена не применялся, поэтому внешних ячеек нет, и СекцияВнешнихЯчеек в ПолныйСнимокСтруктуры была пустой.
Связи сериализуются подряд, без разделения на постоянные и временные. Из КоллекцияСвязейКонтейнера берутся только временные связи, из ТаблицаСвязейБд — постоянные связи. 

Завершает файл байт описания СекцияКонцаФайла.

++++Десериализация полного снимка:
Добавлено в ПолныйСнимокСтруктуры 20.12.2016 08:02 
Задача — восстановить исходное состояние СтруктураСущностей в памяти и таблице. Для этого надо очистить таблицы БД или вообще удалить и создать заново. Вероятно, после загрузки потребуется перестроить индексы таблиц БазаДанныхСолюшена. Из этого следует, что в коде не должны использоваться значения, производные от переменных состояния БазаДанныхСолюшена, так как при загрузке снимка они будут отличаться.
Сначала десериализуются ячейки. Удобно десериализовать сначала ячейки в памяти — меньше переделывать, если пользователь отменит операцию, и проще контролировать ошибки десериализации — доступ к несуществующей записи в таблице. Хотя СтруктураСущностей может занимать много памяти, надо подумать...
Ячейки в память восстанавливаются в исходном виде. Необходимо обходить встроенные в объекты класса ячейки процедуры записи новых значений в ТаблицаЯчеекБд.
Ячейки в ТаблицаЯчеекБд восстанавливаются последовательно друг за другом.
ВнешняяЯчейка ячейки должны проверяться на совпадение состояния, если не совпадают, пользователь должен разобраться и принять решение.
Связи десериализуются после создания ячеек. Временные связи помещаются в КоллекцияСвязейКонтейнера и КоллекцияСвязейЯчейки самих связанных ячеек. Постоянные связи сначала записываются в ТаблицаСвязейБд, потом из ТаблицаСвязейБд получают новый ИдентификаторСвязи, затем проверяют наличие ячеек в памяти и соответственно записываются в КоллекцияСвязейКонтейнера и КоллекцияСвязейЯчейки.
+++++Замечания
* При загрузке ячеек из снимка хорошо бы создавать *список ячеек, загруженных из снимка*, чтобы потом их проще было отличать от других.
    * Для чего их отличать от других? В ЧастичныйСнимокСтруктуры только? 
* Надо сохранять в снимок КлассЯчейки при создании снимка, а потом соответственно восстанавливать обратно.
    * todo.концепция.снимки: Надо составить список вариантов загрузок ячеек из снимка со сменой КлассЯчейки, и оценить, зачем это нужно и как все это выглядит. Например: из MCellBt в MCellA: зачем это надо и как это сделать? 
        * Да вроде бы не надо - ведь должна получиться точная копия СтруктураСущностей. 

+++Замечания
Из wiki:///V:/МоиПроекты/SIM/Работать%20здесь/Concept1/Concept1.wiki?page=ЧастичныйСнимокИдеи
Насколько помню, сериализация была сделана и протестирована, но сделана нескладно:
* в снимке есть ЗаголовокСнимка, который должен содержать СтатистикаСнимка для пользователя, но эта статистика сделана некрасиво и не полна.
* порядок и структура снимка недостаточно удобна и надежна. Всю работу сейчас выполняет МенеджерСнимков, довольно топорно.


