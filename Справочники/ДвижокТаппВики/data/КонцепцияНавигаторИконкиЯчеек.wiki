++ Концепция Навигатор Иконки Ячеек

Из ИконкиЯчеекВНавигаторе, wiki:///V:/МоиПроекты/SIM/Работать%20здесь/NewConcept/NewConcept.wiki?page=УстройствоНавигатора


Поскольку каждый пункт в ОбластьОтображенияСвязейНавигатора в Навигаторе может иметь иконку, возникает вопрос о том, где эти иконки хранить, где их брать, и как их назначать. 
Иконки в ОбластьОтображенияСвязейНавигатора могут сопоставляться как ячейкам, так и связям. 

Иконки сопоставляются ячейкам семантически - как аватар смысла ячейки. Наверно, удобно будет иконку сопоставлять ЯчейкаТипаЯчейки, а они уже будут экспортировать иконки своим дочерним ячейкам. То есть, ИконкаЯчейки должна соответствовать типу ячейки, ИконкаЯчейки предоставляется ячейкой ЯчейкаТипаЯчейки.

Если иконка не назначена, то вместо нее должна отображаться некоторая НейтральнаяИконкаЯчейки.
Если иконка не найдена, вместо нее должна отображаться НеправильнаяИконкаЯчейки.
Эти иконки можно заранее назначить как часть [Навигатор]а.

Иконки ячеек (ИконкаЯчейки) не нужны в контейнере, они никак не используются движком.
Они нужны при отображении ячейки в [Навигатор]е и каких-то еще подобных программах для пользователя.
Поэтому иконки будем сопоставлять с идентификаторами ячеек. Это сопоставление иконок и ячеек назовем ПривязкаИконок.
Запись вида Идентификатор ячейки - имя файла иконки.
Эти привязки относятся к контейнеру в целом, и должны распространяться вместе с проектом контейнера.
Эти записи хранить в некотором ФайлПривязкиИконок в КаталогИконокСолюшена в КаталогСолюшена.
Управлять же этими привязками будет МеханизмКешированияИконок.

Для сопоставления иконок и идентификаторов потребуется соответствующее диалоговое окно. Вызываемое из меню настроек [Солюшен]а в [Навигатор]е.

Хотя эти записи ПривязкаИконок можно было бы хранить в выделенной таблице в БД контейнера. Но тут есть недостаки: 
    * Но есть режим движка NoDB, в нем нет БД, и эти записи придется хранить в файле.
    * Эти привязки не относятся к структуре, не используются при работе структуры, зачем их хранить в БД структуры?
Они используются только при работе навигатора в конкретном контейнере. Так что и пусть загружаются навигатором отдельно от движка.

Если ЯчейкаТипаЯчейки находится в СтороннийСолюшен, нужен специальный ИнтерфейсДоставкиИконокСолюшена для доставки в [Навигатор] этой иконки, определенной в этом СтороннийСолюшен. А также МеханизмКешированияИконок. И обновление кеша при следующем подключении к СтороннийСолюшен, так как ПривязкаИконок могли измениться. 
Привязки иконок, предлагается, можно переопределять на стороне пользователя. Привязать к ячейке из СтороннийСолюшен локальную, более подходящую иконку. Управлять этим переопределением, наверно, будет МеханизмКешированияИконок, как самый подходящий в этом плане.

ЧастичныйСнимокСтруктуры контейнера не включает в себя информацию о иконках, поэтому она может теряться. Зато это позволяет избежать проблемы с несовпадением иконок в разных СнимокСтруктуры.
Привязки иконок к ячейкам отражают предпочтения (представления, культуру?) пользователя.
Эта раскладка привязана к контейнеру и не фиксируется в ЧастичныйСнимокСтруктуры контейнера. Это такая обособленная система привязок иконок к ячейкам.


Содержимое иконок определяется ПользовательскаяКонцепцияСолюшена, а не КонцепцияТапп. 
Файлы иконок хранить в специально выделенной для них КаталогИконокСолюшена в КаталогСолюшена.
Имя файла иконки должно быть уникальным.
Формат иконок .ico позволяет хранить в одном файле несколько иконок разных размеров.

С собственно иконками есть много проблем: 
* Иконки надо где-то брать, причем они должны быть, подобно иконкам файлов, представлены рядом изображений стандартных размеров. 
* Масштабирование иконок не подходит, так как сильно искажает видимое содержание изображения. 
* Иконки из случайных источников использовать затруднительно, так как они не соответствуют формату, итд. 
* Желательно, чтобы иконки ячеек отражали отношения наследования самих ячеек. Это упростит их восприятие и увязку с представлениями пользователя о структуре ячеек проекта.
* Предложить пользователю самому создавать или модифицировать иконки неудобно.
* предоставлять готовые наборы иконок, чтобы пользователь выбирал, тоже не очень удобно. Хотя это лучше чем ничего. 
* Предоставляемые иконки тоже должны быть связаны наследованием, чтобы пользователь мог бы их использовать в цепочках наследования. Но тогда надо чтобы длина цепочки наследования была достаточной. В общем, тупиковато.
* Можно предложить генерировать иконки полуавтоматически согласно связей ячейки, но это тоже проблема. Нужен алгоритм построения иконок как продолжения иерархии. Надо выбрать размер иконок, чтобы рисунок был четко различим.
 
В общем, получается, что пользователь сам определяется с иконками - с созданием, сопоставлением итд. Пусть сам их рисует или где-то берет, но чтобы они соответствовали формату. Это соответствие надо проверять при добавлении иконки в проект.
 
todo.концепция.навигатор: Надо провести исследования - определить ситуации, где надо отобразить иконку, определить оптимальные размеры иконок в каждом случае, установить правила для иконок и реализовать автоматическую проверку соответствия иконки формату при добавлении иконки в проект.
А уже где и как пользователь будет иконки брать, и куда использовать - его дело. Мне надо отработать и реализовать добавление и удаление иконки в [Солюшен], просмотр и поиск. 
