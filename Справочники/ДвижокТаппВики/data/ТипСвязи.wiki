++ Тип Связи
[template: ШаблонКарточкиГлоссария]
Состояние: [В РАЗРАБОТКЕ]

Тип связи описывает некоторое [Отношение] между двумя [Сущность]ями.
Тип связи в старых версиях Тапп назывался Ось связи.

+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* todo.глоссарий.форма: Перечислите обязанности сущности здесь.
* 

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
 todo.глоссарий.форма: Укажите здесь соответствующий класс кода проекта, если известен.
++++Свойства - данные
++++Методы

+++Дополнительная информация 
В СтруктураСущностей может существовать неограниченное количество различных ТипСвязи, описывающих некоторые [Отношение] между двумя [Сущность]ями.
ТипСвязи представлен некоторой ЯчейкаТипаСвязи, которая содержит МетодОбработчикЯчейки обработчики операций для этого конкретного типа связей. В экземпляре связи используется ИдентификаторЯчейки ЯчейкаТипаСвязи. 

Делать ли ТипСвязи для методов отдельной категорией от ТипСвязи данных? Например, абстракцию методов отличать от абстракции данных? 
    * Ну, это вид абстракции. Такой подкласс абстракции. Так что не делать.

+++Операции с типом связи
Нужно реализовать использование, добавление, удаление, указание, переименование, сохранение/загрузка списка ТипСвязи при помощи функций АПИ.

++++Использование типа связи.
ТипСвязи описывается ЯчейкаТипаСвязи, которая может находиться в локальном [Солюшен]е, или в СтороннийСолюшен.
Внешняя ЯчейкаТипаСвязи может использоваться для единообразия СтруктураСущностей Солюшенов в МногоконтейнернаяСистема.
Но операции с таким ТипСвязи сложнее, чем с локальным.

++++Добавление типа связи
Чтобы добавить/создать ТипСвязи в СтруктураСущностей, вернее, в СлужебнаяЧастьСтруктурыСущностей, надо создать соответствующую ЯчейкаТипаСвязи. Возможно, создаваемый ТипСвязи будет входить в некую иерархию типов связей.
После создания, новый ТипСвязи можно использовать при создании связей.

++++Удаление типа связи
Чтобы удалить ТипСвязи, нужно удалить соответствующую ЯчейкаТипаСвязи. Но при удалении ТипСвязи в системе остаются использующие его связи, методы, использующие эти связи и так далее.
Поэтому удалять ТипСвязи нежелательно, лучше просто его не использовать.
Полное удаление некоторого ТипСвязи потребует переделки всей СтруктураСущностей, включая код методов.
Вероятно, удаление ТипСвязи должен производить [Оптимизатор]. 
Причем для этого ему придется просматривать всю СтруктураСущностей - все ячейки и связи. 
И еще этот ТипСвязи могут использовать ВнешняяЯчейка ячейки и ВнешняяСвязь связи, в других [Солюшен]ах МногоконтейнернаяСистема.
Поэтому это может оказаться очень сложной операцией.

++++Указание типа связи
ТипСвязи следует указывать по ИдентификаторЯчейки.
Если НазваниеЯчейки уникально в [Солюшен]е, то ТипСвязи можно указывать по НазваниеЯчейки ЯчейкаТипаСвязи.

++++Переименование типа связи
Чтобы переименовать тип связи, надо переименовать соответствующую ЯчейкаТипаСвязи.
Если ТипСвязи может указываться по НазваниеЯчейки ЯчейкаТипаСвязи, то придется переименовать его также во всех случаях такого указания: в скриптах, методах итд.
 

++++Пользовательские обработчики типа связи
Связи ячеек имеют направления From..To. От исходной ячейки к конечной. А если нужна двунаправленная связь, или направлений несколько, то решение возлагается на ЯчейкаТипаСвязи, которая должна предоставить специальные МетодОбработчикЯчейки обработчики для создания такой связи. [Движок] реализует только стандартную операцию создания связи. Обработчики  от ЯчейкаТипаСвязи могут переопределить операции со связью этого типа.
Обработчики концептуально определяются в ПользовательскаяКонцепцияСолюшена. 
* todo.концепция.сс: Каждому ТипСвязи можно сопоставить МетодОбработчикЯчейки обработчики операций создания, удаления связи. Куда их прицеплять и как это будет работать?

++++Исключения для ТипСвязи
Для обслуживания ТипСвязи нужны исключения
* ТипСвязи не существует (при поиске, если ТипСвязи не найден)
* ТипСвязи с таким именем уже существует (при создании ТипСвязи)
* ...
