++ Концепция СПИ

СПИ теория.

Эта система предполагается для одного пользователя.
Пользователь может достраивать и перестраивать систему как ему удобно.
Для интерфейса можно использовать собственный язык (символ = понятие).
(Надо посмотреть семантику иероглифических языков - как они формируются, общие правила для всех наверно одинаковы?)
Получается, взаимодействие реализовано будет в понятиях, которые транслируются в символы для передачи пользователю и обратно.
Набор понятий определяется пользователем, транслируется по правилам, определенным пользователем.
Можно использовать любой, в том числе личный, язык для представления понятий.

Система должна формироваться по определенным правилам, однако их соблюдение частично ложится на пользователя.
Приложения в системе будут в виде скриптов: данные и действия. 
Поскольку система индивидуальна, каждый пользователь должен сам корректировать структуру приложения при необходимости.
То есть, скрипты должны быть открытыми. Это получается уже не программа, а инструкции по ее созданию.
Хотя в каком-то смысле это все еще отдельная вещь. Можно торговать, если скрипт сложнее создать, чем купить. Или если он предполагает ограниченный доступ к ресурсу. Типично для современного софта.

Предположительно, для пользователя нужно будет создать начальную структуру, облегчающую старт пользователя. Некоторый общий набор, который затем сам пользователь будет развивать каким-то образом. 
Также пользователю потребуются некоторые начальные знания, позволяющие создавать и оценивать структуру, распознавать типичные ошибки.

Система будет надстройкой над ОС компьютера, как сейчас Рабочий стол. Упрощенно, она выполняет те же функции, но имеет дополнительные возможности:
- возможность модификации пользователем или самомодификации, исходя из требований пользователя.   
- более удобный, полностью индивидуальный интерфейс пользователя.
- возможность автоматизации типичных действий пользователя.
В принципе эти возможности реализованы и сейчас, но это требуют от пользователя знаний алгоритмизации и языков программирования, владения соответствующими инструментами.

Таким образом, задача создания СПИ: создать систему, которая не требует специальных знаний для ее использования или модификации.
Для начала работы с системой должно быть достаточно общеобразовательной подготовки. (Из чего следует, что общеобразовательная подготовка должна быть улучшена, и обеспечивать некоторый стабильный минимум как стандарт. Этот набор знаний вполне пригоден и в другой деятельности, поскольку представляет семантику окружающей среды.)

++++1
Из КонцептТапп2
1.2 система поддержки интеллекта (СПИ). Наброски.

Система персонализирована и настраивается под пользователя. Пользователь может достраивать и перестраивать систему как ему удобно.
Для интерфейса можно использовать индивидуальный язык (символ = понятие) и индивидуальные элементы интерфейса.
(Надо посмотреть семантику иероглифических языков - как они формируются, общие правила для всех наверно одинаковы?)
Таким образом, взаимодействие реализовано в понятиях, которые транслируются в символы для передачи пользователю и обратно.
Набор понятий определяется пользователем, транслируется по правилам, определенным пользователем.
Можно использовать любой, в том числе индивидуальный, способ представления понятий.

Система представляет собой граф из классов, объектов, операций. То есть, данных и действий.
Система должна формироваться по определенным правилам, однако их соблюдение частично ложится на пользователя.
Приложения в системе создаются образованием в общей глобальной структуре новых структур, использующих новые и существующие элементы системы для реализации необходимых функций. При этом дистрибутив нового приложения представляет собой текстовый файл - скрипт, по которому создается новый участок структуры.
Поскольку система индивидуальна, каждый пользователь должен сам корректировать структуру приложения при необходимости.
То есть, скрипты должны быть открытыми. Это уже не программа, а инструкции по ее созданию. Хотя в каком-то смысле это все еще отдельная вещь. Типично для современного программного обеспечения.

Для пользователя необходимо создать начальную структуру, облегчающую начало использования. Некоторый общий набор, который затем сам пользователь будет развивать по своему усмотрению. 
Также пользователю потребуются некоторые начальные знания, позволяющие создавать и оценивать структуру, распознавать типичные ошибки. 

Система будет надстройкой над ОС компьютера. 
Возможности:
- модификация пользователем или самомодификация, исходя из требований пользователя.   
- полностью индивидуальный интерфейс пользователя.
- автоматизация типичных действий пользователя.
Существующие реализации требуют от пользователя знаний алгоритмизации и языков программирования, владения соответствующими инструментами.

Таким образом, задача создания СПИ: создать систему, которая не требует специальных знаний для ее использования или модификации.
Для начала работы с системой должно быть достаточно общеобразовательной подготовки. (Из чего следует, что общеобразовательная подготовка должна обеспечивать некоторый стабильный минимум как стандарт. Этот набор знаний вполне пригоден в любой деятельности, поскольку представляет семантику окружающей среды.)
