++ Подсказка Методическая
Собирать тут методики решения проблем, возникающих в этой вики.


++Материалы
+++Советы по работе в википаде
* Для обозначения полей и операций классов и сущностей можно использовать вложенные страницы:
 [ФайлСнимка/ПолеНазваниеСолюшена] , это название надо в квадратные скобки ставить после набора. Тогда оно считается отдельной страницей и не путается с другими. И ярлыки для него работают.
    * Но ссылки на этой странице тоже становятся локальными внутри пространства ФайлСнимка. А глобальные страницы нужно представлять ссылками вида [//ФайлСнимка]. 
    * Такие вложенные страницы создают субверсию, параллельную структуру внутри некоторого пространства имен. Это удобно для создания новой версии концепции приложения под существующей концепцией. И можно заводить новые версии страниц сущностей, не меняя старые, и можно ссылаться на существующие старые страницы. 
* Вкладки википада удобны для работы с несколькими страницами одновременно. Например при анализе материала или при создании ссылок на сопутствующие страницы.
* Еще внизу есть окно Журнал. Там выводятся проблемы в структуре вики. Чем это может быть полезно, я пока не знаю.

+++создать небольшую прототипную версию, чтобы уменьшить объем разгребаемой кучи материалов
* Нужно разработать прототипную версию концепции подсистемы лога, не дожидаясь окончания проработки всех материалов по этой теме. Поскольку всю ту кучу сразу не провернуть, я дистанцируюсь от нее и проектирую прототип на меньшем материале.
    * 14.02.2017 13:40:44 Это было успешной идеей. Отрыв от общего контекста позволил создать маленькую модель-прототип. Ее скелет затем был использован для постройки следующей версии концепции.
    * 17.02.2017 16:07:36 question: Как бы сделать ПодсказкаМетодическая из этой штуки? Чтобы она подсказывала мне решение проблемы Что делать, чтобы ...
        * Для начала надо записывать эти подсказки в отдельный документ. Потом можно собрать их в БД и прицепить запросы на подсказки. 

+++представить предметную область абстрактными объектами, чтобы вынести из них или изолировать ими проблемные места концепции
* Тут в основном материалы для принятия решений, а сами решения еще не приняты и только намечаются. Эту подсистему предлагается доделывать последней, она зависит от конструкции всех остальных подсистем. Хотя это потому, что она концептуально не спроектирована. Ведь это всего лишь модуль с входами и выходами; надо вынести все проблемы наружу и тогда можно реализовать саму подсистему, а проблемы разруливать обвязкой модуля, всякими енумами. Ну, это такое мнение, поверхностное.
    * И, как следствие, возникла идея реализовать ПодсистемаЛога сменным модулем с собственной системой версий. А заодно и остальные подобные подсистемы.
    * Когда я инкапсулировал содержание записей лога в абстрактный объект, чтобы избавиться от них и их зависимостей, я смог перейти к разработке остальных частей ПодсистемаЛога. И в них обнаружилась собственная куча проблем, с собственными зависимостями. И вот теперь я эту кучу разгребаю.
        * Надо бы этот способ инкапсуляции проблем тоже внести в методику автоматизации решения задач.

+++1
* И что-то не получается никак разнести материал по сущностям. Тут надо какой-то другой подход применить.
    * Можно для начала определить темы, которым соответствуют эти тексты, а потом уже их группировать и разносить
    * Возможно, незачем разносить. Это ведь общая концепция, она должна описывать процесс, а не отдельные его элементы. Потом переработаем и разнесем тексты в сущности в соответствии с их ролью в процессе.
        * Не разносить, только копировать, и оставить все в концепции. Эти концепции еще будут меняться, и вытаскивать из них информацию в общую кучу при каждой переделке движка - много путаницы получится.
        * Но ведь все равно придется переделывать всю концепцию для новой версии Движка? Тогда и вики дублируем, как версию основной нынешней вики, специально для новой версии движка.

+++2
* Вроде бы накидал, развил. Теперь надо моделировать, чтобы выявить пробелы в модели. Надо отдельную вики, что-ли? Или УМЛ-диаграммы рисовать? Как дальше модель эту обрабатывать?
    * Вроде бы надо теперь ее представить как цельный объект, и пробовать запускать ее функции как бы в работе движка. Правильно дергать за функции, как при настоящей работе. И смотреть, что и как происходит и почему не получается.
    * Для этого надо собственно собрать модель. И выписать в список все эти воздействия на нее. И последовательности воздействий. Это диаграмма УМЛ такая есть, вот на нее надо это все нарисовать и проработать. Большая получится диаграмма. 
* 06.09.2016 10:36  Поставил на винХР диаграммер тогетерсс, попробую на нем диаграммы представить. Но лучше все же текстом пока их описать. 

+++Странные идеи
++++Класс-генератор менеджера лога - неподходящая идея
Можно создать класс-генератор, который будет брать некоторый объект ЗаписьЛога и генерировать автоматически класс менеджера лога на SqliteСУБД.
Надо вытаскивать свойства ЗаписьЛога через Reflection, формировать запросы БД и функции.
Подобное есть в студии, но оно не для лога а для общего доступа к БД.
Этот же должен сам:
* следить за размером файла лога
* переключаться на новые файлы и управлять существующими ФайлЛогаСолюшена. 
* делать выборки из лога по заданным критериям.
* создавать как файлы лога: базы данных, таблицы и индексы.

Тогда нужно отметить поля, по которым ведется поиск, чтобы на них сделать индексы.
Получится такой универсальный менеджер лога для больших проектов.
* *Решение:* тут бы просто менеджер лога сделать, а предлагается еще автогенератор менеджеров изобретать.
* Это цинизм или практичность? Это критическое мышление, взгляд со стороны.
* Так вот каждый результат надо со стороны оценивать критически. Но вот это надо делать ДО того как работа выполнена. С этим проблема.

+++3 Подсистема создает впечатление неподъемной сложности. Работа не идет.
* Впечатление неподъемности происходит от большого количества взаимозависимостей сущностей. Из-за этого контекст работы очень большой, и я быстро устаю.
* Надо завести страницу, на которую стаскать ссылки на все страницы, входящие в нужную подсистему.
* Затем разделить ссылки страниц на страницы, требующие анализа и переработки, и страницы, не требующие анализа и переработки. То есть, на источники материала, приемники и не участвующие в работе страницы.
* Теперь можно сфокусироваться на нескольких самых сложных страницах, и начать работу. Стремясь получить результат хотя бы в первом приближении. 
* Сразу идеальный результат не получится. Нужно рассчитывать сделать первую приблизительную итерацию. Которую потом можно будет уточнить, дополнить, развить, итд
* В любом случае, надо уменьшать объем материала превращением его в факты и последующим разнесением их во все причастные страницы сущностей глоссария.

+++ Никак не найду вход в процесс решения задачи
* Вот надо сделать некоторую работу, а никак не могу к ней подступиться.
* Можно предложить  создать страницу для задачи и ее ярлык поместить на рабочий стол. Тогда она будет на виду, и когда-нибудь звезды сойдутся и я смогу начать работу по задаче.
* Это потому, что надо изучить и обустроить контекст задачи, натаскать материалы, провести подготовку. Сразу-то всего этого нет. Поэтому и начать неполучается. А если периодически заходить, и что-то помаленьку делать, даже только в памяти, то и все эти ресурсы понемногу собираются. Работа по задаче, тут в концепции - похожа на перетаскивание ящиков из одного помещения в другое, выстраивание из них всяких замысловатых лабиринтов, полных неоднозначного смысла. Устаешь так же.

+++Двигаюсь по ветви (процессу) проектируемого поведения системы, но не могу придумать решение, устройство необходимого узла
* Это значит, что сложность решения больше, чем объем знаний о нем.
* Это значит, что требуется более полное представление о требованиях к проектируемому узлу. Для этого надо выявить все места, где еще используется этот узел, какие требования к нему в целом предъявляются. Тогда можно будет придумать оптимальную конструкцию. Но, возможно, не с первого раза.
* Чтобы выявить все основные случаи использования узла, надо изучить множество ветвей поведения проектируемой системы.
 Поэтому нужно эти ветви-процессы одновременно придумывать, проектировать и пытаться реализовать. Но рационально будет при этом ограничиться одной подсистемой, а не разрабатывать все процессы системы сразу. Хотя, это вопрос сложности системы и мощности интеллекта. 
