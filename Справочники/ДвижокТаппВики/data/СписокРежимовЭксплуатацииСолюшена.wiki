++ Список Режимов Эксплуатации Солюшена

Это список режимов эксплуатации [Движок]а
Эти различные версии должны описываться в ВерсияАрхитектурыДвижка. У них разный набор функций и разное применение.
Обозначать версию архитектуры движка будем названием файла сборки движка.

+++По БД
* это определяет используемый АдаптерБД. С единым ИнтерфейсАдаптераБД они получаются совершенно взаимозаменяемы и поэтому не должны влиять на архитектуру [Движок]а, теоретически. Практически же все они немного разные и для них нужны немного разные версии [Движок]а. Но не в каждом случае.
* СервернаяБдСолюшена - серверная СУБД, например, MySqlСУБД. БД вынесена в отдельный процесс и не занимает память в процессе, где располагается СтруктураСущностей. Запросы к БД обрабатываются медленно. При аварии БД не повреждается.
* ФайловаяБдСолюшена - файловая БД, например, Access. БД занимает память в том же процессе, где располагается СтруктураСущностей. Запросы к БД обрабатываются быстро. При аварии БД может быть повреждена.
* СолюшенБезБД - только СтруктураСущностей и временные ячейки и связи. БД не используется.

+++По приложению
* СервернаяВерсияДвижка - К Движок прицепляется приложение-сервер, соединенный с сетью. Подобно СУБД. Приложение работает с Солюшеном.
* ЛокальнаяВерсияДвижка - Движок работает с приложением, подобным [Навигатор]. Приложение работает с Солюшеном.
* ВстраиваемаяВерсияДвижка - Движок работает с приложением. Приложение не создает Солюшен, а работает чисто с СтруктураСущностей. Возможно, использует БД. Возможно, временно, только для выполнения работы, например, поиска решения.


+++Отложить до релиза движка
* todo.концепция.солюшен: Надо найти в текстах упоминания о способах эксплуатации движка и снабдить их ссылками на страницы этих способов.
* todo.концепция.солюшен: Надо дополнить список способов эксплуатации движка. 
* todo.концепция.солюшен: Надо построить тут таблицу вариантов, перечислить и описать все разумные комбинации. Потом описать для них сценарии работы пользователя.
    * Придумывать это будем после эксплуатации первой версии движка - еще надо выявить разные неочевидные нюансы, которые могут все изменить. Незачем делать лишнюю работу в процессе объятия необъятного.
* todo.концепция.солюшен: Надо описать для каждого варианта движка применения - они будут разные для каждого этого варианта. Эти применения надо бы вывести из ПрименениеПроекта. Там надо указать, какой из вариантов движка лучше подходит для данного применения.
todo.разработка: Надо составить план очередность разработки вариантов движка. Чтобы учитывать доработки концепции Тапп после опытного использования каждого варианта.

+++Описания вариантов версий - перенесены в страницы вариантов версий


 
  