++ Операции Солюшена
[template: ШаблонКарточкиГлоссария]
Состояние: [В РАЗРАБОТКЕ]

todo.глоссарий.форма: Опишите определение сущности здесь.


+++Версии
* todo.глоссарий.форма: Создайте новую страницу для версии описания сущности, добавив к имени "Версия0". Так осуществляется поддержка версий страниц глоссария. 

+++Обязанности
* todo.глоссарий.форма: Перечислите обязанности сущности здесь.
* 

+++Сущности предметной области
* todo.глоссарий.форма: Перечислите выявленные сущности предметной области здесь.
* 

+++Соответствующий класс кода
 todo.глоссарий.форма: Укажите здесь соответствующий класс кода проекта, если известен.
++++Свойства - данные
++++Методы

+++Дополнительная информация 
todo.солюшен: Здешние имена переделать на стандартные из НастройкиСолюшена
Но сначала убрать отсюда весь мусор - меньше работы потом будет.
Wiki3
ОперацииСПроектомВ1
В_РАЗРАБОТКЕ
Пользователь работает с системой через концепцию проекта. То есть, пользователь работает с проектом.

Проект состоит из БД с таблицами контейнера, ячеек, связей; файловой системы проекта с файлом проекта, файла [Лог]а, еще чего-то.

++++Операции 
•	Создание нового проекта
а) пользователь может создавать БД на СерверSQLБД
б) пользователь не может создавать БД, но имеет уже созданную БД. 
•	Открытие существующего проекта 
•	Просмотр или модификация структуры элементов 
•	Получение статистики проекта 
•	Сохранение проекта 
•	Оптимизация проекта 
•	Закрытие проекта 
•	Очистка проекта 
•	Удаление проекта
а) пользователь может удалять БД с СерверSQLБД
б) пользователь не может удалить БД с СерверSQLБД

Существующий код операций проекта надо переделать. Функции разместить в контейнере, часть из них статические.
Именовать вроде MEngine.ProjectCreate(). Максимально подробно комментировать решения кода.
Но сначала надо спроектировать всю эту подсистему, описать ситуации исключений и придумать как их обрабатывать.
Учесть также [Лог] и прочие подсистемы. 

+++++Создание нового проекта
Нужно создать новый проект. Созданный проект затем можно открыть.
Надо создать начальную БД, файловую систему проекта, начальные параметры контейнера, [Лог], прочие необходимые ресурсы.
Пользователь должен быть членом роли dbcreator на СерверSQLБД, чтобы создать БД и стать ее владельцем.
Два варианта: 
а) пользователь является членом роли dbcreator и может создавать БД на СерверSQLБД
б) пользователь не может создавать БД, но имеет уже созданную БД и назначен ее владельцем (dbo).

Аргументы 
•	Имя проекта - до 256 символов 
•	Описание проекта - до 8192 символов. 
•	путь к СерверSQLБД. Если проект не использует БД, путь должен быть пустым 
•	имя создаваемой БД на сервере, соответствует имени проекта. Если проект не использует БД, игнорируется. 
•	ЛогинАккаунтаСУБД. Если проект не использует БД, игнорируется. 
•	ПарольАккаунтаСУБД. Если проект не использует БД, игнорируется. 
•	путь к каталогу, в котором будет размещаться файловая система проекта. Если каталог не существует, или недоступен для записи, выдается исключение. 
•	ТаймаутСервераСУБД соединения с БД. Если проект не использует БД, игнорируется.

Работа - неправильно, надо переделать.
1) Проверяем, что каталог для проекта существует и доступен на запись. Для этого создаем в нем папку с именем проекта.
Если неудача, выдаем исключение.
Если успешно, то:
Если БД должна использоваться: {
1) Открываем соединение с СерверSQLБД. Создаем БД.
Здесь, если не удастся установить соединение с сервером, недостаточно прав пользователя сервера БД, БД уже существует, итд, возникнет исключение SqlException.
2) Создаем таблицы в БД.
3) Создаем индексы.
4) Закрываем соединение с БД. 

5) создаем и инициализируем объект контейнера, присваиваем имя и другие свойства
6) открываем соединение с БД
7) записываем контейнер в БД
8) закрываем соединение
9) уничтожаем контейнер
}
10) создаем каталоги проекта

Возможные проблемы 
•	параметры соединения с СерверSQLБД отсутствуют или неверные 
•	ошибка при открытии соединения с БД 
•	Ошибка при операциях с БД 
•	Нет прав доступа к каталогу для файловой системы проекта 
Можно проверить права доступа перед работой. 
Можно создать файловую систему проекта перед созданием БД - удалить файлы проще чем откатить изменения БД.

Замечания
Можно было бы разделить код создания БД и создания таблиц БД, но это усложняет разработку прототипа.
Смысл разделения в том, что пользователь не создает базу сам, так как не имеет полномочий на СерверSQLБД, а база создается кем-то, пользователю даются достаточные привилегии для работы (dbo), и уже пользователь создает и удаляет таблицы и индексы при работе с проектом.
Тогда надо разделить создание БД и создание таблиц в БД. Это будет две версии текущей функции: одна создает базу и использует ее, другая использует существующую базу. Разумеется, код можно совместить. Проверить, способен ли пользователь создать БД на СерверSQLБД, пока нечем. 

Как проверить наличие у пользователя права на запись в каталог?
Как выполняется обновление индексов таблиц БД - выделять ли создание индексов в отдельную функцию, и удаление индексов.
Как проверить, что БД существует?
Как удалить БД вместе с таблицами? DROP DATABASE

Требуемые функции 
•	Создание БД 
•	Удаление БД 
•	Проверка существования БД 
•	Создание таблиц 
•	Удаление таблиц 
•	Создание индексов таблиц - для каждой таблицы отдельно 
•	Удаление индексов таблиц - для каждой таблицы отдельно 
•	Перестройка индексов таблиц - для каждой таблицы отдельно 

+++++Открытие существующего проекта
Открывает существующий проект для работы. Проект обозначается указанием пути к файлу проекта 

Аргументы 
•	Путь к файлу проекта

Работа
1) Читаем файл проекта
2) Проверяем версию проекта. Если версия не поддерживается движком, выдаем исключение
3) Открываем соединение с БД
4) Загружаем контейнер из БД
5) Инициализируем счетчик идентификаторов постоянных ячеек
6) Инициализируем все остальное

Возможные проблемы 
•	Ошибка доступа к файлу проекта 
•	Неверный формат файла проекта 
•	параметры соединения с СерверSQLБД отсутствуют или неверные 
•	ошибка при открытии соединения с БД 
•	Ошибка при операциях с БД

Замечания
Просмотр или модификация структуры элементов
Здесь пользователь выполняет различные операции, которые рассматриваются отдельно от контекста проекта.

+++++Получение статистики проекта
Функция возвращает статистику текущего открытого проекта, то есть, статистику контейнера.
Аргументов нет. 

Замечания
Можно подумать над оптимизацией подсчета числа элементов, хотя это несущественно, так как операция предполагается редко используемой. 

+++++Сохранение проекта
Сохранение открытого контейнера. В чем смысл этого сохранения?
При работе с файлами сохранение сохраняет промежуточную копию данных. При работе процесса сохранение создает мгновенную копию процесса. В нашей системе это соответствует полному снимку.
Сохранение должно выполняться в специально отведенных местах процесса, чтобы исключить потери данных, вызванные незавершенным состоянием процесса.

Если проект использует БД: 
•	сохранить данные контейнера в БД. 
•	Обновить файл проекта для соответствия статистики. 
•	Возможно, сохранить все ячейки MCellBds 
•	Возможно, сохранить все ячейки MCellBt

Если проект не использует БД: 
•	Обновить файл проекта для соответствия статистики 
•	Данные контейнера, ячеек и связей сохраняются только в полном снимке, при создании этого полного снимка 
•	В проекте не может быть ячеек кроме MCellBt. 
•	Нельзя сохранять MCellBt ячейки, так как нет БД. 
•	В проекте не может быть не временных связей 
•	Нельзя сохранять временные связи, так как нет БД.

Надо бы сохранить все ячейки MCellBds и MCellBt и их связи. Надо определиться, когда и что сохранять.
а) Временные ячейки сохраняются при сохранении проекта. 
При сохранении временные ячейки станут постоянными. Следовательно, до сохранения ненужные временные ячейки должны быть удалены, иначе они станут частью общей структуры.
б) Временные ячейки не сохраняются при сохранении проекта, сохраняются только индивидуальным вызовом операции сохранения.
Это позволяет несколько раз за сеанс сохранять весь контейнер, не изменяя состояние временных ячеек и связей. Однако в чем смысл такого сохранения?

Временные ячейки используются для того, чтобы быстро построить временную структуру,получить результат и удалить эту временную структуру. В этом случае временные ячейки незачем сохранять при сохранении контейнера.
Временные ячейки можно использовать, чтобы быстро построить модель, внести изменения, затем сохранить модель. В структуре могут существовать и другие временные ячейки, от других задач. Поэтому лучше сохранять временные ячейки индивидуально. Можно просто сделать функцию, которая будет сохранять все временные ячейки контейнера, но вызывать ее в частном порядке.

MCellBds ячейки уже существуют в таблице, но могут содержать отличные от табличных значения. Они используются для того, чтобы быстро изменить значения и структуру ячеек. Эти ячейки желательно сохранять при сохранении контейнера.
Однако такие ячейки могут использоваться и для подгонки параметров, причем сохранять эти изменения нежелательно.
Таким образом, лучше сохранять ячейки индивидуально.

Индивидуальное сохранение ячеек предполагает, что как минимум идентификаторы ячеек будут где-то храниться, чтобы отличить ячейки сохраняемой части структуры от остальных.
Функции группового сохранения ячеек предполагают, что в процессе работы есть состояние, в котором в структуре существуют только ячейки, которые надо сохранить. Если это не так, надо индивидуально сохранять каждую ячейку.
Движок может предоставить механизм хранения идентификаторов ячеек для сохранеия групп ячеек.
Со связями ячеек сложнее - их трудно индивидуально сохранять, типично ячейка выполняет сохранение связи. 

Итак, выводы: 
•	MCellBt ячейки сохранять индивидуально или отдельным вызовом функции сохранения временных ячеек.
Не сохранять при сохранении контейнера. 
•	MCellBds ячейки сохранять индивидуально или отдельным вызовом функции сохранения временных ячеек.
Сохранять при сохранении контейнера. 

+++++Оптимизация проекта
См. [Оптимизатор]
Произвести оптимизацию открытого проекта: 
•	удалить ненужные связи 
•	удалить ненужные ячейки 
•	оптимизировать индексы таблиц БД 
•	оптимизировать прочие подсистемы проекта.

Для оптимизации нужен монопольный доступ к структуре ячеек.

+++++Закрытие проекта
Закрытие проекта, закрытие [Лог]а, контейнера, закрытие соединения с БД, прочих ресурсов, очистка памяти.
Опционально, сохранить контейнер перед закрытием.

Замечания
Сейчас код использует операцию закрытия контейнера, поскольку контейнер фактически представляет весь проект. Надо бы сделать отдельную функцию, которая бы закрывала именно проект.

+++++Очистка проекта
Привести проект к состоянию только что созданного проекта.
Удаление из открытого проекта всех ячеек и связей, сброс параметров к исходному состоянию.
Для этого надо удалить данные из таблиц, а возможно, лучше будет удалить и пересоздать сами таблицы.
Удалить все файлы ресурсов и сбросить счетчик идентификатора файлов ресурсов.

Работа
1) очистить список связей контейнера
2) очистить список ячеек контейнера
3) удалить таблицы контейнера
4) обнулить переменные-счетчики идентификаторов временных и постоянных ячеек
5) обнулить переменные состояния контейнера

Замечания
Код не тестировался и может быть недостаточным.

+++++Удаление проекта
Удаление закрытого проекта из СерверSQLБД и с файловой системы.
Два варианта:
а) пользователь может удалять БД с СерверSQLБД
б) пользователь не может удалить БД с СерверSQLБД 

Аргументы 
•	Экземпляр, представляющий файл удаляемого Солюшена

Работа
1) Если используется БД, удаляем БД с СерверSQLБД.
2) Удаляем каталог проекта с диска

Возможные проблемы 
•	параметры соединения с СерверSQLБД отсутствуют или неверные 
•	ошибка при открытии соединения с БД 
•	Ошибка при операциях с БД 
•	Нет прав доступа к каталогу для файловой системы проекта 

Замечания 
•	Аргумент лучше сделать путь к файлу удаляемого проекта. Так будет единообразно.

+++++Вспомогательные операции
Вспомогательные операции, необходимые для работы с проектом. 
•	Создание БД 
•	Удаление БД 
•	Создание таблиц в БД 
•	Удаление таблиц из БД 
•	Создание индексов 
•	Удаление индексов 
•	Перестроение индексов


